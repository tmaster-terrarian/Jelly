### YamlMime:ManagedReference
items:
- uid: Jelly.CollisionSystem
  commentId: T:Jelly.CollisionSystem
  id: CollisionSystem
  parent: Jelly
  children:
  - Jelly.CollisionSystem.#ctor(Jelly.Scene)
  - Jelly.CollisionSystem.Bounds
  - Jelly.CollisionSystem.Collisions
  - Jelly.CollisionSystem.GetAllActorComponents
  - Jelly.CollisionSystem.GetTile(Microsoft.Xna.Framework.Point)
  - Jelly.CollisionSystem.Height
  - Jelly.CollisionSystem.InWorld(Jelly.CollisionSystem,Microsoft.Xna.Framework.Point)
  - Jelly.CollisionSystem.InWorld(Jelly.CollisionSystem,System.Int32,System.Int32)
  - Jelly.CollisionSystem.InWorld(Microsoft.Xna.Framework.Point)
  - Jelly.CollisionSystem.InWorld(System.Int32,System.Int32)
  - Jelly.CollisionSystem.JsonTiles
  - Jelly.CollisionSystem.JumpThroughMeeting(Microsoft.Xna.Framework.Rectangle,System.Boolean)
  - Jelly.CollisionSystem.JumpThroughPlace(Microsoft.Xna.Framework.Rectangle)
  - Jelly.CollisionSystem.JumpThroughSlopePlace(Microsoft.Xna.Framework.Rectangle)
  - Jelly.CollisionSystem.JumpThroughSlopes
  - Jelly.CollisionSystem.JumpThroughs
  - Jelly.CollisionSystem.PostDraw
  - Jelly.CollisionSystem.RefreshTileShapes(Microsoft.Xna.Framework.Rectangle)
  - Jelly.CollisionSystem.Resize(System.Int32,System.Int32)
  - Jelly.CollisionSystem.Scene
  - Jelly.CollisionSystem.SetTile(System.Int32,Microsoft.Xna.Framework.Point)
  - Jelly.CollisionSystem.Size
  - Jelly.CollisionSystem.Slopes
  - Jelly.CollisionSystem.SolidMeeting(Microsoft.Xna.Framework.Rectangle)
  - Jelly.CollisionSystem.SolidPlace(Microsoft.Xna.Framework.Rectangle)
  - Jelly.CollisionSystem.TileMeeting(Microsoft.Xna.Framework.Rectangle,System.Boolean)
  - Jelly.CollisionSystem.TileSize
  - Jelly.CollisionSystem.ValidateArea(Microsoft.Xna.Framework.Rectangle)
  - Jelly.CollisionSystem.Visible
  - Jelly.CollisionSystem.Width
  langs:
  - csharp
  - vb
  name: CollisionSystem
  nameWithType: CollisionSystem
  fullName: Jelly.CollisionSystem
  type: Class
  source:
    remote:
      path: Jelly/CollisionSystem.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: CollisionSystem
    path: ../Jelly/CollisionSystem.cs
    startLine: 13
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public class CollisionSystem
    content.vb: Public Class CollisionSystem
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Jelly.CollisionSystem.Scene
  commentId: P:Jelly.CollisionSystem.Scene
  id: Scene
  parent: Jelly.CollisionSystem
  langs:
  - csharp
  - vb
  name: Scene
  nameWithType: CollisionSystem.Scene
  fullName: Jelly.CollisionSystem.Scene
  type: Property
  source:
    remote:
      path: Jelly/CollisionSystem.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: Scene
    path: ../Jelly/CollisionSystem.cs
    startLine: 15
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: >-
      [JsonIgnore]

      public Scene Scene { get; set; }
    parameters: []
    return:
      type: Jelly.Scene
    content.vb: >-
      <JsonIgnore>

      Public Property Scene As Scene
  overload: Jelly.CollisionSystem.Scene*
  attributes:
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
- uid: Jelly.CollisionSystem.JsonTiles
  commentId: P:Jelly.CollisionSystem.JsonTiles
  id: JsonTiles
  parent: Jelly.CollisionSystem
  langs:
  - csharp
  - vb
  name: JsonTiles
  nameWithType: CollisionSystem.JsonTiles
  fullName: Jelly.CollisionSystem.JsonTiles
  type: Property
  source:
    remote:
      path: Jelly/CollisionSystem.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: JsonTiles
    path: ../Jelly/CollisionSystem.cs
    startLine: 22
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("tiles")]

      public int[] JsonTiles { get; set; }
    parameters: []
    return:
      type: System.Int32[]
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("tiles")>

      Public Property JsonTiles As Integer()
  overload: Jelly.CollisionSystem.JsonTiles*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: tiles
- uid: Jelly.CollisionSystem.TileSize
  commentId: P:Jelly.CollisionSystem.TileSize
  id: TileSize
  parent: Jelly.CollisionSystem
  langs:
  - csharp
  - vb
  name: TileSize
  nameWithType: CollisionSystem.TileSize
  fullName: Jelly.CollisionSystem.TileSize
  type: Property
  source:
    remote:
      path: Jelly/CollisionSystem.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: TileSize
    path: ../Jelly/CollisionSystem.cs
    startLine: 41
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public static int TileSize { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Shared Property TileSize As Integer
  overload: Jelly.CollisionSystem.TileSize*
- uid: Jelly.CollisionSystem.Visible
  commentId: P:Jelly.CollisionSystem.Visible
  id: Visible
  parent: Jelly.CollisionSystem
  langs:
  - csharp
  - vb
  name: Visible
  nameWithType: CollisionSystem.Visible
  fullName: Jelly.CollisionSystem.Visible
  type: Property
  source:
    remote:
      path: Jelly/CollisionSystem.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: Visible
    path: ../Jelly/CollisionSystem.cs
    startLine: 43
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public bool Visible { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Visible As Boolean
  overload: Jelly.CollisionSystem.Visible*
- uid: Jelly.CollisionSystem.Bounds
  commentId: P:Jelly.CollisionSystem.Bounds
  id: Bounds
  parent: Jelly.CollisionSystem
  langs:
  - csharp
  - vb
  name: Bounds
  nameWithType: CollisionSystem.Bounds
  fullName: Jelly.CollisionSystem.Bounds
  type: Property
  source:
    remote:
      path: Jelly/CollisionSystem.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: Bounds
    path: ../Jelly/CollisionSystem.cs
    startLine: 45
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: >-
      [JsonIgnore]

      public Rectangle Bounds { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Rectangle
    content.vb: >-
      <JsonIgnore>

      Public ReadOnly Property Bounds As Rectangle
  overload: Jelly.CollisionSystem.Bounds*
  attributes:
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
- uid: Jelly.CollisionSystem.Size
  commentId: P:Jelly.CollisionSystem.Size
  id: Size
  parent: Jelly.CollisionSystem
  langs:
  - csharp
  - vb
  name: Size
  nameWithType: CollisionSystem.Size
  fullName: Jelly.CollisionSystem.Size
  type: Property
  source:
    remote:
      path: Jelly/CollisionSystem.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: Size
    path: ../Jelly/CollisionSystem.cs
    startLine: 52
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: >-
      [JsonIgnore]

      public Point Size { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Point
    content.vb: >-
      <JsonIgnore>

      Public ReadOnly Property Size As Point
  overload: Jelly.CollisionSystem.Size*
  attributes:
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
- uid: Jelly.CollisionSystem.Collisions
  commentId: P:Jelly.CollisionSystem.Collisions
  id: Collisions
  parent: Jelly.CollisionSystem
  langs:
  - csharp
  - vb
  name: Collisions
  nameWithType: CollisionSystem.Collisions
  fullName: Jelly.CollisionSystem.Collisions
  type: Property
  source:
    remote:
      path: Jelly/CollisionSystem.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: Collisions
    path: ../Jelly/CollisionSystem.cs
    startLine: 59
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: >-
      [JsonIgnore]

      public Rectangle[,] Collisions { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Rectangle[,]
    content.vb: >-
      <JsonIgnore>

      Public ReadOnly Property Collisions As Rectangle(,)
  overload: Jelly.CollisionSystem.Collisions*
  attributes:
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
- uid: Jelly.CollisionSystem.JumpThroughs
  commentId: P:Jelly.CollisionSystem.JumpThroughs
  id: JumpThroughs
  parent: Jelly.CollisionSystem
  langs:
  - csharp
  - vb
  name: JumpThroughs
  nameWithType: CollisionSystem.JumpThroughs
  fullName: Jelly.CollisionSystem.JumpThroughs
  type: Property
  source:
    remote:
      path: Jelly/CollisionSystem.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: JumpThroughs
    path: ../Jelly/CollisionSystem.cs
    startLine: 85
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public List<Rectangle> JumpThroughs { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Microsoft.Xna.Framework.Rectangle}
    content.vb: Public ReadOnly Property JumpThroughs As List(Of Rectangle)
  overload: Jelly.CollisionSystem.JumpThroughs*
- uid: Jelly.CollisionSystem.JumpThroughSlopes
  commentId: P:Jelly.CollisionSystem.JumpThroughSlopes
  id: JumpThroughSlopes
  parent: Jelly.CollisionSystem
  langs:
  - csharp
  - vb
  name: JumpThroughSlopes
  nameWithType: CollisionSystem.JumpThroughSlopes
  fullName: Jelly.CollisionSystem.JumpThroughSlopes
  type: Property
  source:
    remote:
      path: Jelly/CollisionSystem.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: JumpThroughSlopes
    path: ../Jelly/CollisionSystem.cs
    startLine: 86
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public List<Line> JumpThroughSlopes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Jelly.Line}
    content.vb: Public ReadOnly Property JumpThroughSlopes As List(Of Line)
  overload: Jelly.CollisionSystem.JumpThroughSlopes*
- uid: Jelly.CollisionSystem.Slopes
  commentId: P:Jelly.CollisionSystem.Slopes
  id: Slopes
  parent: Jelly.CollisionSystem
  langs:
  - csharp
  - vb
  name: Slopes
  nameWithType: CollisionSystem.Slopes
  fullName: Jelly.CollisionSystem.Slopes
  type: Property
  source:
    remote:
      path: Jelly/CollisionSystem.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: Slopes
    path: ../Jelly/CollisionSystem.cs
    startLine: 87
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public List<Line> Slopes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Jelly.Line}
    content.vb: Public ReadOnly Property Slopes As List(Of Line)
  overload: Jelly.CollisionSystem.Slopes*
- uid: Jelly.CollisionSystem.Width
  commentId: P:Jelly.CollisionSystem.Width
  id: Width
  parent: Jelly.CollisionSystem
  langs:
  - csharp
  - vb
  name: Width
  nameWithType: CollisionSystem.Width
  fullName: Jelly.CollisionSystem.Width
  type: Property
  source:
    remote:
      path: Jelly/CollisionSystem.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: Width
    path: ../Jelly/CollisionSystem.cs
    startLine: 91
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: >-
      [JsonIgnore]

      public int Width { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonIgnore>

      Public ReadOnly Property Width As Integer
  overload: Jelly.CollisionSystem.Width*
  attributes:
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
- uid: Jelly.CollisionSystem.Height
  commentId: P:Jelly.CollisionSystem.Height
  id: Height
  parent: Jelly.CollisionSystem
  langs:
  - csharp
  - vb
  name: Height
  nameWithType: CollisionSystem.Height
  fullName: Jelly.CollisionSystem.Height
  type: Property
  source:
    remote:
      path: Jelly/CollisionSystem.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: Height
    path: ../Jelly/CollisionSystem.cs
    startLine: 92
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: >-
      [JsonIgnore]

      public int Height { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonIgnore>

      Public ReadOnly Property Height As Integer
  overload: Jelly.CollisionSystem.Height*
  attributes:
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
- uid: Jelly.CollisionSystem.#ctor(Jelly.Scene)
  commentId: M:Jelly.CollisionSystem.#ctor(Jelly.Scene)
  id: '#ctor(Jelly.Scene)'
  parent: Jelly.CollisionSystem
  langs:
  - csharp
  - vb
  name: CollisionSystem(Scene)
  nameWithType: CollisionSystem.CollisionSystem(Scene)
  fullName: Jelly.CollisionSystem.CollisionSystem(Jelly.Scene)
  type: Constructor
  source:
    remote:
      path: Jelly/CollisionSystem.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: .ctor
    path: ../Jelly/CollisionSystem.cs
    startLine: 94
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public CollisionSystem(Scene scene)
    parameters:
    - id: scene
      type: Jelly.Scene
    content.vb: Public Sub New(scene As Scene)
  overload: Jelly.CollisionSystem.#ctor*
  nameWithType.vb: CollisionSystem.New(Scene)
  fullName.vb: Jelly.CollisionSystem.New(Jelly.Scene)
  name.vb: New(Scene)
- uid: Jelly.CollisionSystem.Resize(System.Int32,System.Int32)
  commentId: M:Jelly.CollisionSystem.Resize(System.Int32,System.Int32)
  id: Resize(System.Int32,System.Int32)
  parent: Jelly.CollisionSystem
  langs:
  - csharp
  - vb
  name: Resize(int, int)
  nameWithType: CollisionSystem.Resize(int, int)
  fullName: Jelly.CollisionSystem.Resize(int, int)
  type: Method
  source:
    remote:
      path: Jelly/CollisionSystem.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: Resize
    path: ../Jelly/CollisionSystem.cs
    startLine: 100
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public void Resize(int newWidth, int newHeight)
    parameters:
    - id: newWidth
      type: System.Int32
    - id: newHeight
      type: System.Int32
    content.vb: Public Sub Resize(newWidth As Integer, newHeight As Integer)
  overload: Jelly.CollisionSystem.Resize*
  nameWithType.vb: CollisionSystem.Resize(Integer, Integer)
  fullName.vb: Jelly.CollisionSystem.Resize(Integer, Integer)
  name.vb: Resize(Integer, Integer)
- uid: Jelly.CollisionSystem.ValidateArea(Microsoft.Xna.Framework.Rectangle)
  commentId: M:Jelly.CollisionSystem.ValidateArea(Microsoft.Xna.Framework.Rectangle)
  id: ValidateArea(Microsoft.Xna.Framework.Rectangle)
  parent: Jelly.CollisionSystem
  langs:
  - csharp
  - vb
  name: ValidateArea(Rectangle)
  nameWithType: CollisionSystem.ValidateArea(Rectangle)
  fullName: Jelly.CollisionSystem.ValidateArea(Microsoft.Xna.Framework.Rectangle)
  type: Method
  source:
    remote:
      path: Jelly/CollisionSystem.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: ValidateArea
    path: ../Jelly/CollisionSystem.cs
    startLine: 107
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public Rectangle ValidateArea(Rectangle rectangle)
    parameters:
    - id: rectangle
      type: Microsoft.Xna.Framework.Rectangle
    return:
      type: Microsoft.Xna.Framework.Rectangle
    content.vb: Public Function ValidateArea(rectangle As Rectangle) As Rectangle
  overload: Jelly.CollisionSystem.ValidateArea*
- uid: Jelly.CollisionSystem.RefreshTileShapes(Microsoft.Xna.Framework.Rectangle)
  commentId: M:Jelly.CollisionSystem.RefreshTileShapes(Microsoft.Xna.Framework.Rectangle)
  id: RefreshTileShapes(Microsoft.Xna.Framework.Rectangle)
  parent: Jelly.CollisionSystem
  langs:
  - csharp
  - vb
  name: RefreshTileShapes(Rectangle)
  nameWithType: CollisionSystem.RefreshTileShapes(Rectangle)
  fullName: Jelly.CollisionSystem.RefreshTileShapes(Microsoft.Xna.Framework.Rectangle)
  type: Method
  source:
    remote:
      path: Jelly/CollisionSystem.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: RefreshTileShapes
    path: ../Jelly/CollisionSystem.cs
    startLine: 128
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public void RefreshTileShapes(Rectangle area)
    parameters:
    - id: area
      type: Microsoft.Xna.Framework.Rectangle
    content.vb: Public Sub RefreshTileShapes(area As Rectangle)
  overload: Jelly.CollisionSystem.RefreshTileShapes*
- uid: Jelly.CollisionSystem.PostDraw
  commentId: M:Jelly.CollisionSystem.PostDraw
  id: PostDraw
  parent: Jelly.CollisionSystem
  langs:
  - csharp
  - vb
  name: PostDraw()
  nameWithType: CollisionSystem.PostDraw()
  fullName: Jelly.CollisionSystem.PostDraw()
  type: Method
  source:
    remote:
      path: Jelly/CollisionSystem.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: PostDraw
    path: ../Jelly/CollisionSystem.cs
    startLine: 146
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public void PostDraw()
    content.vb: Public Sub PostDraw()
  overload: Jelly.CollisionSystem.PostDraw*
- uid: Jelly.CollisionSystem.GetAllActorComponents
  commentId: M:Jelly.CollisionSystem.GetAllActorComponents
  id: GetAllActorComponents
  parent: Jelly.CollisionSystem
  langs:
  - csharp
  - vb
  name: GetAllActorComponents()
  nameWithType: CollisionSystem.GetAllActorComponents()
  fullName: Jelly.CollisionSystem.GetAllActorComponents()
  type: Method
  source:
    remote:
      path: Jelly/CollisionSystem.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: GetAllActorComponents
    path: ../Jelly/CollisionSystem.cs
    startLine: 223
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public List<Actor> GetAllActorComponents()
    return:
      type: System.Collections.Generic.List{Jelly.Components.Actor}
    content.vb: Public Function GetAllActorComponents() As List(Of Actor)
  overload: Jelly.CollisionSystem.GetAllActorComponents*
- uid: Jelly.CollisionSystem.TileMeeting(Microsoft.Xna.Framework.Rectangle,System.Boolean)
  commentId: M:Jelly.CollisionSystem.TileMeeting(Microsoft.Xna.Framework.Rectangle,System.Boolean)
  id: TileMeeting(Microsoft.Xna.Framework.Rectangle,System.Boolean)
  parent: Jelly.CollisionSystem
  langs:
  - csharp
  - vb
  name: TileMeeting(Rectangle, bool)
  nameWithType: CollisionSystem.TileMeeting(Rectangle, bool)
  fullName: Jelly.CollisionSystem.TileMeeting(Microsoft.Xna.Framework.Rectangle, bool)
  type: Method
  source:
    remote:
      path: Jelly/CollisionSystem.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: TileMeeting
    path: ../Jelly/CollisionSystem.cs
    startLine: 235
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public bool TileMeeting(Rectangle rect, bool checkSlopes = true)
    parameters:
    - id: rect
      type: Microsoft.Xna.Framework.Rectangle
    - id: checkSlopes
      type: System.Boolean
    return:
      type: System.Boolean
    content.vb: Public Function TileMeeting(rect As Rectangle, checkSlopes As Boolean = True) As Boolean
  overload: Jelly.CollisionSystem.TileMeeting*
  nameWithType.vb: CollisionSystem.TileMeeting(Rectangle, Boolean)
  fullName.vb: Jelly.CollisionSystem.TileMeeting(Microsoft.Xna.Framework.Rectangle, Boolean)
  name.vb: TileMeeting(Rectangle, Boolean)
- uid: Jelly.CollisionSystem.JumpThroughPlace(Microsoft.Xna.Framework.Rectangle)
  commentId: M:Jelly.CollisionSystem.JumpThroughPlace(Microsoft.Xna.Framework.Rectangle)
  id: JumpThroughPlace(Microsoft.Xna.Framework.Rectangle)
  parent: Jelly.CollisionSystem
  langs:
  - csharp
  - vb
  name: JumpThroughPlace(Rectangle)
  nameWithType: CollisionSystem.JumpThroughPlace(Rectangle)
  fullName: Jelly.CollisionSystem.JumpThroughPlace(Microsoft.Xna.Framework.Rectangle)
  type: Method
  source:
    remote:
      path: Jelly/CollisionSystem.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: JumpThroughPlace
    path: ../Jelly/CollisionSystem.cs
    startLine: 277
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public Rectangle? JumpThroughPlace(Rectangle bbox)
    parameters:
    - id: bbox
      type: Microsoft.Xna.Framework.Rectangle
    return:
      type: System.Nullable{Microsoft.Xna.Framework.Rectangle}
    content.vb: Public Function JumpThroughPlace(bbox As Rectangle) As Rectangle?
  overload: Jelly.CollisionSystem.JumpThroughPlace*
- uid: Jelly.CollisionSystem.JumpThroughSlopePlace(Microsoft.Xna.Framework.Rectangle)
  commentId: M:Jelly.CollisionSystem.JumpThroughSlopePlace(Microsoft.Xna.Framework.Rectangle)
  id: JumpThroughSlopePlace(Microsoft.Xna.Framework.Rectangle)
  parent: Jelly.CollisionSystem
  langs:
  - csharp
  - vb
  name: JumpThroughSlopePlace(Rectangle)
  nameWithType: CollisionSystem.JumpThroughSlopePlace(Rectangle)
  fullName: Jelly.CollisionSystem.JumpThroughSlopePlace(Microsoft.Xna.Framework.Rectangle)
  type: Method
  source:
    remote:
      path: Jelly/CollisionSystem.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: JumpThroughSlopePlace
    path: ../Jelly/CollisionSystem.cs
    startLine: 290
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public Line? JumpThroughSlopePlace(Rectangle bbox)
    parameters:
    - id: bbox
      type: Microsoft.Xna.Framework.Rectangle
    return:
      type: System.Nullable{Jelly.Line}
    content.vb: Public Function JumpThroughSlopePlace(bbox As Rectangle) As Line?
  overload: Jelly.CollisionSystem.JumpThroughSlopePlace*
- uid: Jelly.CollisionSystem.JumpThroughMeeting(Microsoft.Xna.Framework.Rectangle,System.Boolean)
  commentId: M:Jelly.CollisionSystem.JumpThroughMeeting(Microsoft.Xna.Framework.Rectangle,System.Boolean)
  id: JumpThroughMeeting(Microsoft.Xna.Framework.Rectangle,System.Boolean)
  parent: Jelly.CollisionSystem
  langs:
  - csharp
  - vb
  name: JumpThroughMeeting(Rectangle, bool)
  nameWithType: CollisionSystem.JumpThroughMeeting(Rectangle, bool)
  fullName: Jelly.CollisionSystem.JumpThroughMeeting(Microsoft.Xna.Framework.Rectangle, bool)
  type: Method
  source:
    remote:
      path: Jelly/CollisionSystem.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: JumpThroughMeeting
    path: ../Jelly/CollisionSystem.cs
    startLine: 302
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public bool JumpThroughMeeting(Rectangle rect, bool checkSlopes = true)
    parameters:
    - id: rect
      type: Microsoft.Xna.Framework.Rectangle
    - id: checkSlopes
      type: System.Boolean
    return:
      type: System.Boolean
    content.vb: Public Function JumpThroughMeeting(rect As Rectangle, checkSlopes As Boolean = True) As Boolean
  overload: Jelly.CollisionSystem.JumpThroughMeeting*
  nameWithType.vb: CollisionSystem.JumpThroughMeeting(Rectangle, Boolean)
  fullName.vb: Jelly.CollisionSystem.JumpThroughMeeting(Microsoft.Xna.Framework.Rectangle, Boolean)
  name.vb: JumpThroughMeeting(Rectangle, Boolean)
- uid: Jelly.CollisionSystem.SolidPlace(Microsoft.Xna.Framework.Rectangle)
  commentId: M:Jelly.CollisionSystem.SolidPlace(Microsoft.Xna.Framework.Rectangle)
  id: SolidPlace(Microsoft.Xna.Framework.Rectangle)
  parent: Jelly.CollisionSystem
  langs:
  - csharp
  - vb
  name: SolidPlace(Rectangle)
  nameWithType: CollisionSystem.SolidPlace(Rectangle)
  fullName: Jelly.CollisionSystem.SolidPlace(Microsoft.Xna.Framework.Rectangle)
  type: Method
  source:
    remote:
      path: Jelly/CollisionSystem.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: SolidPlace
    path: ../Jelly/CollisionSystem.cs
    startLine: 304
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public Solid? SolidPlace(Rectangle bbox)
    parameters:
    - id: bbox
      type: Microsoft.Xna.Framework.Rectangle
    return:
      type: Jelly.Components.Solid
    content.vb: Public Function SolidPlace(bbox As Rectangle) As Solid
  overload: Jelly.CollisionSystem.SolidPlace*
- uid: Jelly.CollisionSystem.SolidMeeting(Microsoft.Xna.Framework.Rectangle)
  commentId: M:Jelly.CollisionSystem.SolidMeeting(Microsoft.Xna.Framework.Rectangle)
  id: SolidMeeting(Microsoft.Xna.Framework.Rectangle)
  parent: Jelly.CollisionSystem
  langs:
  - csharp
  - vb
  name: SolidMeeting(Rectangle)
  nameWithType: CollisionSystem.SolidMeeting(Rectangle)
  fullName: Jelly.CollisionSystem.SolidMeeting(Microsoft.Xna.Framework.Rectangle)
  type: Method
  source:
    remote:
      path: Jelly/CollisionSystem.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: SolidMeeting
    path: ../Jelly/CollisionSystem.cs
    startLine: 326
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public bool SolidMeeting(Rectangle bbox)
    parameters:
    - id: bbox
      type: Microsoft.Xna.Framework.Rectangle
    return:
      type: System.Boolean
    content.vb: Public Function SolidMeeting(bbox As Rectangle) As Boolean
  overload: Jelly.CollisionSystem.SolidMeeting*
- uid: Jelly.CollisionSystem.SetTile(System.Int32,Microsoft.Xna.Framework.Point)
  commentId: M:Jelly.CollisionSystem.SetTile(System.Int32,Microsoft.Xna.Framework.Point)
  id: SetTile(System.Int32,Microsoft.Xna.Framework.Point)
  parent: Jelly.CollisionSystem
  langs:
  - csharp
  - vb
  name: SetTile(int, Point)
  nameWithType: CollisionSystem.SetTile(int, Point)
  fullName: Jelly.CollisionSystem.SetTile(int, Microsoft.Xna.Framework.Point)
  type: Method
  source:
    remote:
      path: Jelly/CollisionSystem.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: SetTile
    path: ../Jelly/CollisionSystem.cs
    startLine: 328
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public void SetTile(int id, Point position)
    parameters:
    - id: id
      type: System.Int32
    - id: position
      type: Microsoft.Xna.Framework.Point
    content.vb: Public Sub SetTile(id As Integer, position As Point)
  overload: Jelly.CollisionSystem.SetTile*
  nameWithType.vb: CollisionSystem.SetTile(Integer, Point)
  fullName.vb: Jelly.CollisionSystem.SetTile(Integer, Microsoft.Xna.Framework.Point)
  name.vb: SetTile(Integer, Point)
- uid: Jelly.CollisionSystem.GetTile(Microsoft.Xna.Framework.Point)
  commentId: M:Jelly.CollisionSystem.GetTile(Microsoft.Xna.Framework.Point)
  id: GetTile(Microsoft.Xna.Framework.Point)
  parent: Jelly.CollisionSystem
  langs:
  - csharp
  - vb
  name: GetTile(Point)
  nameWithType: CollisionSystem.GetTile(Point)
  fullName: Jelly.CollisionSystem.GetTile(Microsoft.Xna.Framework.Point)
  type: Method
  source:
    remote:
      path: Jelly/CollisionSystem.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: GetTile
    path: ../Jelly/CollisionSystem.cs
    startLine: 337
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public int GetTile(Point position)
    parameters:
    - id: position
      type: Microsoft.Xna.Framework.Point
    return:
      type: System.Int32
    content.vb: Public Function GetTile(position As Point) As Integer
  overload: Jelly.CollisionSystem.GetTile*
- uid: Jelly.CollisionSystem.InWorld(Jelly.CollisionSystem,System.Int32,System.Int32)
  commentId: M:Jelly.CollisionSystem.InWorld(Jelly.CollisionSystem,System.Int32,System.Int32)
  id: InWorld(Jelly.CollisionSystem,System.Int32,System.Int32)
  parent: Jelly.CollisionSystem
  langs:
  - csharp
  - vb
  name: InWorld(CollisionSystem, int, int)
  nameWithType: CollisionSystem.InWorld(CollisionSystem, int, int)
  fullName: Jelly.CollisionSystem.InWorld(Jelly.CollisionSystem, int, int)
  type: Method
  source:
    remote:
      path: Jelly/CollisionSystem.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: InWorld
    path: ../Jelly/CollisionSystem.cs
    startLine: 344
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public static bool InWorld(CollisionSystem level, int x, int y)
    parameters:
    - id: level
      type: Jelly.CollisionSystem
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Shared Function InWorld(level As CollisionSystem, x As Integer, y As Integer) As Boolean
  overload: Jelly.CollisionSystem.InWorld*
  nameWithType.vb: CollisionSystem.InWorld(CollisionSystem, Integer, Integer)
  fullName.vb: Jelly.CollisionSystem.InWorld(Jelly.CollisionSystem, Integer, Integer)
  name.vb: InWorld(CollisionSystem, Integer, Integer)
- uid: Jelly.CollisionSystem.InWorld(Jelly.CollisionSystem,Microsoft.Xna.Framework.Point)
  commentId: M:Jelly.CollisionSystem.InWorld(Jelly.CollisionSystem,Microsoft.Xna.Framework.Point)
  id: InWorld(Jelly.CollisionSystem,Microsoft.Xna.Framework.Point)
  parent: Jelly.CollisionSystem
  langs:
  - csharp
  - vb
  name: InWorld(CollisionSystem, Point)
  nameWithType: CollisionSystem.InWorld(CollisionSystem, Point)
  fullName: Jelly.CollisionSystem.InWorld(Jelly.CollisionSystem, Microsoft.Xna.Framework.Point)
  type: Method
  source:
    remote:
      path: Jelly/CollisionSystem.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: InWorld
    path: ../Jelly/CollisionSystem.cs
    startLine: 349
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public static bool InWorld(CollisionSystem level, Point pos)
    parameters:
    - id: level
      type: Jelly.CollisionSystem
    - id: pos
      type: Microsoft.Xna.Framework.Point
    return:
      type: System.Boolean
    content.vb: Public Shared Function InWorld(level As CollisionSystem, pos As Point) As Boolean
  overload: Jelly.CollisionSystem.InWorld*
- uid: Jelly.CollisionSystem.InWorld(System.Int32,System.Int32)
  commentId: M:Jelly.CollisionSystem.InWorld(System.Int32,System.Int32)
  id: InWorld(System.Int32,System.Int32)
  parent: Jelly.CollisionSystem
  langs:
  - csharp
  - vb
  name: InWorld(int, int)
  nameWithType: CollisionSystem.InWorld(int, int)
  fullName: Jelly.CollisionSystem.InWorld(int, int)
  type: Method
  source:
    remote:
      path: Jelly/CollisionSystem.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: InWorld
    path: ../Jelly/CollisionSystem.cs
    startLine: 354
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public bool InWorld(int x, int y)
    parameters:
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Function InWorld(x As Integer, y As Integer) As Boolean
  overload: Jelly.CollisionSystem.InWorld*
  nameWithType.vb: CollisionSystem.InWorld(Integer, Integer)
  fullName.vb: Jelly.CollisionSystem.InWorld(Integer, Integer)
  name.vb: InWorld(Integer, Integer)
- uid: Jelly.CollisionSystem.InWorld(Microsoft.Xna.Framework.Point)
  commentId: M:Jelly.CollisionSystem.InWorld(Microsoft.Xna.Framework.Point)
  id: InWorld(Microsoft.Xna.Framework.Point)
  parent: Jelly.CollisionSystem
  langs:
  - csharp
  - vb
  name: InWorld(Point)
  nameWithType: CollisionSystem.InWorld(Point)
  fullName: Jelly.CollisionSystem.InWorld(Microsoft.Xna.Framework.Point)
  type: Method
  source:
    remote:
      path: Jelly/CollisionSystem.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: InWorld
    path: ../Jelly/CollisionSystem.cs
    startLine: 359
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public bool InWorld(Point pos)
    parameters:
    - id: pos
      type: Microsoft.Xna.Framework.Point
    return:
      type: System.Boolean
    content.vb: Public Function InWorld(pos As Point) As Boolean
  overload: Jelly.CollisionSystem.InWorld*
references:
- uid: Jelly
  commentId: N:Jelly
  href: Jelly.html
  name: Jelly
  nameWithType: Jelly
  fullName: Jelly
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Jelly.CollisionSystem.Scene*
  commentId: Overload:Jelly.CollisionSystem.Scene
  href: Jelly.CollisionSystem.html#Jelly_CollisionSystem_Scene
  name: Scene
  nameWithType: CollisionSystem.Scene
  fullName: Jelly.CollisionSystem.Scene
- uid: Jelly.Scene
  commentId: T:Jelly.Scene
  parent: Jelly
  href: Jelly.Scene.html
  name: Scene
  nameWithType: Scene
  fullName: Jelly.Scene
- uid: Jelly.CollisionSystem.JsonTiles*
  commentId: Overload:Jelly.CollisionSystem.JsonTiles
  href: Jelly.CollisionSystem.html#Jelly_CollisionSystem_JsonTiles
  name: JsonTiles
  nameWithType: CollisionSystem.JsonTiles
  fullName: Jelly.CollisionSystem.JsonTiles
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: Jelly.CollisionSystem.TileSize*
  commentId: Overload:Jelly.CollisionSystem.TileSize
  href: Jelly.CollisionSystem.html#Jelly_CollisionSystem_TileSize
  name: TileSize
  nameWithType: CollisionSystem.TileSize
  fullName: Jelly.CollisionSystem.TileSize
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Jelly.CollisionSystem.Visible*
  commentId: Overload:Jelly.CollisionSystem.Visible
  href: Jelly.CollisionSystem.html#Jelly_CollisionSystem_Visible
  name: Visible
  nameWithType: CollisionSystem.Visible
  fullName: Jelly.CollisionSystem.Visible
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Jelly.CollisionSystem.Bounds*
  commentId: Overload:Jelly.CollisionSystem.Bounds
  href: Jelly.CollisionSystem.html#Jelly_CollisionSystem_Bounds
  name: Bounds
  nameWithType: CollisionSystem.Bounds
  fullName: Jelly.CollisionSystem.Bounds
- uid: Microsoft.Xna.Framework.Rectangle
  commentId: T:Microsoft.Xna.Framework.Rectangle
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Rectangle
  nameWithType: Rectangle
  fullName: Microsoft.Xna.Framework.Rectangle
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
- uid: Jelly.CollisionSystem.Size*
  commentId: Overload:Jelly.CollisionSystem.Size
  href: Jelly.CollisionSystem.html#Jelly_CollisionSystem_Size
  name: Size
  nameWithType: CollisionSystem.Size
  fullName: Jelly.CollisionSystem.Size
- uid: Microsoft.Xna.Framework.Point
  commentId: T:Microsoft.Xna.Framework.Point
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Point
  nameWithType: Point
  fullName: Microsoft.Xna.Framework.Point
- uid: Jelly.CollisionSystem.Collisions*
  commentId: Overload:Jelly.CollisionSystem.Collisions
  href: Jelly.CollisionSystem.html#Jelly_CollisionSystem_Collisions
  name: Collisions
  nameWithType: CollisionSystem.Collisions
  fullName: Jelly.CollisionSystem.Collisions
- uid: Microsoft.Xna.Framework.Rectangle[,]
  isExternal: true
  name: Rectangle[,]
  nameWithType: Rectangle[,]
  fullName: Microsoft.Xna.Framework.Rectangle[,]
  nameWithType.vb: Rectangle(,)
  fullName.vb: Microsoft.Xna.Framework.Rectangle(,)
  name.vb: Rectangle(,)
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Rectangle
    name: Rectangle
    isExternal: true
  - name: '['
  - name: ','
  - name: ']'
  spec.vb:
  - uid: Microsoft.Xna.Framework.Rectangle
    name: Rectangle
    isExternal: true
  - name: (
  - name: ','
  - name: )
- uid: Jelly.CollisionSystem.JumpThroughs*
  commentId: Overload:Jelly.CollisionSystem.JumpThroughs
  href: Jelly.CollisionSystem.html#Jelly_CollisionSystem_JumpThroughs
  name: JumpThroughs
  nameWithType: CollisionSystem.JumpThroughs
  fullName: Jelly.CollisionSystem.JumpThroughs
- uid: System.Collections.Generic.List{Microsoft.Xna.Framework.Rectangle}
  commentId: T:System.Collections.Generic.List{Microsoft.Xna.Framework.Rectangle}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Rectangle>
  nameWithType: List<Rectangle>
  fullName: System.Collections.Generic.List<Microsoft.Xna.Framework.Rectangle>
  nameWithType.vb: List(Of Rectangle)
  fullName.vb: System.Collections.Generic.List(Of Microsoft.Xna.Framework.Rectangle)
  name.vb: List(Of Rectangle)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Microsoft.Xna.Framework.Rectangle
    name: Rectangle
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.Xna.Framework.Rectangle
    name: Rectangle
    isExternal: true
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Jelly.CollisionSystem.JumpThroughSlopes*
  commentId: Overload:Jelly.CollisionSystem.JumpThroughSlopes
  href: Jelly.CollisionSystem.html#Jelly_CollisionSystem_JumpThroughSlopes
  name: JumpThroughSlopes
  nameWithType: CollisionSystem.JumpThroughSlopes
  fullName: Jelly.CollisionSystem.JumpThroughSlopes
- uid: System.Collections.Generic.List{Jelly.Line}
  commentId: T:System.Collections.Generic.List{Jelly.Line}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Line>
  nameWithType: List<Line>
  fullName: System.Collections.Generic.List<Jelly.Line>
  nameWithType.vb: List(Of Line)
  fullName.vb: System.Collections.Generic.List(Of Jelly.Line)
  name.vb: List(Of Line)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Jelly.Line
    name: Line
    href: Jelly.Line.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Jelly.Line
    name: Line
    href: Jelly.Line.html
  - name: )
- uid: Jelly.CollisionSystem.Slopes*
  commentId: Overload:Jelly.CollisionSystem.Slopes
  href: Jelly.CollisionSystem.html#Jelly_CollisionSystem_Slopes
  name: Slopes
  nameWithType: CollisionSystem.Slopes
  fullName: Jelly.CollisionSystem.Slopes
- uid: Jelly.CollisionSystem.Width*
  commentId: Overload:Jelly.CollisionSystem.Width
  href: Jelly.CollisionSystem.html#Jelly_CollisionSystem_Width
  name: Width
  nameWithType: CollisionSystem.Width
  fullName: Jelly.CollisionSystem.Width
- uid: Jelly.CollisionSystem.Height*
  commentId: Overload:Jelly.CollisionSystem.Height
  href: Jelly.CollisionSystem.html#Jelly_CollisionSystem_Height
  name: Height
  nameWithType: CollisionSystem.Height
  fullName: Jelly.CollisionSystem.Height
- uid: Jelly.CollisionSystem.#ctor*
  commentId: Overload:Jelly.CollisionSystem.#ctor
  href: Jelly.CollisionSystem.html#Jelly_CollisionSystem__ctor_Jelly_Scene_
  name: CollisionSystem
  nameWithType: CollisionSystem.CollisionSystem
  fullName: Jelly.CollisionSystem.CollisionSystem
  nameWithType.vb: CollisionSystem.New
  fullName.vb: Jelly.CollisionSystem.New
  name.vb: New
- uid: Jelly.CollisionSystem.Resize*
  commentId: Overload:Jelly.CollisionSystem.Resize
  href: Jelly.CollisionSystem.html#Jelly_CollisionSystem_Resize_System_Int32_System_Int32_
  name: Resize
  nameWithType: CollisionSystem.Resize
  fullName: Jelly.CollisionSystem.Resize
- uid: Jelly.CollisionSystem.ValidateArea*
  commentId: Overload:Jelly.CollisionSystem.ValidateArea
  href: Jelly.CollisionSystem.html#Jelly_CollisionSystem_ValidateArea_Microsoft_Xna_Framework_Rectangle_
  name: ValidateArea
  nameWithType: CollisionSystem.ValidateArea
  fullName: Jelly.CollisionSystem.ValidateArea
- uid: Jelly.CollisionSystem.RefreshTileShapes*
  commentId: Overload:Jelly.CollisionSystem.RefreshTileShapes
  href: Jelly.CollisionSystem.html#Jelly_CollisionSystem_RefreshTileShapes_Microsoft_Xna_Framework_Rectangle_
  name: RefreshTileShapes
  nameWithType: CollisionSystem.RefreshTileShapes
  fullName: Jelly.CollisionSystem.RefreshTileShapes
- uid: Jelly.CollisionSystem.PostDraw*
  commentId: Overload:Jelly.CollisionSystem.PostDraw
  href: Jelly.CollisionSystem.html#Jelly_CollisionSystem_PostDraw
  name: PostDraw
  nameWithType: CollisionSystem.PostDraw
  fullName: Jelly.CollisionSystem.PostDraw
- uid: Jelly.CollisionSystem.GetAllActorComponents*
  commentId: Overload:Jelly.CollisionSystem.GetAllActorComponents
  href: Jelly.CollisionSystem.html#Jelly_CollisionSystem_GetAllActorComponents
  name: GetAllActorComponents
  nameWithType: CollisionSystem.GetAllActorComponents
  fullName: Jelly.CollisionSystem.GetAllActorComponents
- uid: System.Collections.Generic.List{Jelly.Components.Actor}
  commentId: T:System.Collections.Generic.List{Jelly.Components.Actor}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Actor>
  nameWithType: List<Actor>
  fullName: System.Collections.Generic.List<Jelly.Components.Actor>
  nameWithType.vb: List(Of Actor)
  fullName.vb: System.Collections.Generic.List(Of Jelly.Components.Actor)
  name.vb: List(Of Actor)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Jelly.Components.Actor
    name: Actor
    href: Jelly.Components.Actor.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Jelly.Components.Actor
    name: Actor
    href: Jelly.Components.Actor.html
  - name: )
- uid: Jelly.CollisionSystem.TileMeeting*
  commentId: Overload:Jelly.CollisionSystem.TileMeeting
  href: Jelly.CollisionSystem.html#Jelly_CollisionSystem_TileMeeting_Microsoft_Xna_Framework_Rectangle_System_Boolean_
  name: TileMeeting
  nameWithType: CollisionSystem.TileMeeting
  fullName: Jelly.CollisionSystem.TileMeeting
- uid: Jelly.CollisionSystem.JumpThroughPlace*
  commentId: Overload:Jelly.CollisionSystem.JumpThroughPlace
  href: Jelly.CollisionSystem.html#Jelly_CollisionSystem_JumpThroughPlace_Microsoft_Xna_Framework_Rectangle_
  name: JumpThroughPlace
  nameWithType: CollisionSystem.JumpThroughPlace
  fullName: Jelly.CollisionSystem.JumpThroughPlace
- uid: System.Nullable{Microsoft.Xna.Framework.Rectangle}
  commentId: T:System.Nullable{Microsoft.Xna.Framework.Rectangle}
  parent: System
  definition: System.Nullable`1
  name: Rectangle?
  nameWithType: Rectangle?
  fullName: Microsoft.Xna.Framework.Rectangle?
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Rectangle
    name: Rectangle
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: Microsoft.Xna.Framework.Rectangle
    name: Rectangle
    isExternal: true
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Jelly.CollisionSystem.JumpThroughSlopePlace*
  commentId: Overload:Jelly.CollisionSystem.JumpThroughSlopePlace
  href: Jelly.CollisionSystem.html#Jelly_CollisionSystem_JumpThroughSlopePlace_Microsoft_Xna_Framework_Rectangle_
  name: JumpThroughSlopePlace
  nameWithType: CollisionSystem.JumpThroughSlopePlace
  fullName: Jelly.CollisionSystem.JumpThroughSlopePlace
- uid: System.Nullable{Jelly.Line}
  commentId: T:System.Nullable{Jelly.Line}
  parent: System
  definition: System.Nullable`1
  href: Jelly.Line.html
  name: Line?
  nameWithType: Line?
  fullName: Jelly.Line?
  spec.csharp:
  - uid: Jelly.Line
    name: Line
    href: Jelly.Line.html
  - name: '?'
  spec.vb:
  - uid: Jelly.Line
    name: Line
    href: Jelly.Line.html
  - name: '?'
- uid: Jelly.CollisionSystem.JumpThroughMeeting*
  commentId: Overload:Jelly.CollisionSystem.JumpThroughMeeting
  href: Jelly.CollisionSystem.html#Jelly_CollisionSystem_JumpThroughMeeting_Microsoft_Xna_Framework_Rectangle_System_Boolean_
  name: JumpThroughMeeting
  nameWithType: CollisionSystem.JumpThroughMeeting
  fullName: Jelly.CollisionSystem.JumpThroughMeeting
- uid: Jelly.CollisionSystem.SolidPlace*
  commentId: Overload:Jelly.CollisionSystem.SolidPlace
  href: Jelly.CollisionSystem.html#Jelly_CollisionSystem_SolidPlace_Microsoft_Xna_Framework_Rectangle_
  name: SolidPlace
  nameWithType: CollisionSystem.SolidPlace
  fullName: Jelly.CollisionSystem.SolidPlace
- uid: Jelly.Components.Solid
  commentId: T:Jelly.Components.Solid
  parent: Jelly.Components
  href: Jelly.Components.Solid.html
  name: Solid
  nameWithType: Solid
  fullName: Jelly.Components.Solid
- uid: Jelly.Components
  commentId: N:Jelly.Components
  href: Jelly.html
  name: Jelly.Components
  nameWithType: Jelly.Components
  fullName: Jelly.Components
  spec.csharp:
  - uid: Jelly
    name: Jelly
    href: Jelly.html
  - name: .
  - uid: Jelly.Components
    name: Components
    href: Jelly.Components.html
  spec.vb:
  - uid: Jelly
    name: Jelly
    href: Jelly.html
  - name: .
  - uid: Jelly.Components
    name: Components
    href: Jelly.Components.html
- uid: Jelly.CollisionSystem.SolidMeeting*
  commentId: Overload:Jelly.CollisionSystem.SolidMeeting
  href: Jelly.CollisionSystem.html#Jelly_CollisionSystem_SolidMeeting_Microsoft_Xna_Framework_Rectangle_
  name: SolidMeeting
  nameWithType: CollisionSystem.SolidMeeting
  fullName: Jelly.CollisionSystem.SolidMeeting
- uid: Jelly.CollisionSystem.SetTile*
  commentId: Overload:Jelly.CollisionSystem.SetTile
  href: Jelly.CollisionSystem.html#Jelly_CollisionSystem_SetTile_System_Int32_Microsoft_Xna_Framework_Point_
  name: SetTile
  nameWithType: CollisionSystem.SetTile
  fullName: Jelly.CollisionSystem.SetTile
- uid: Jelly.CollisionSystem.GetTile*
  commentId: Overload:Jelly.CollisionSystem.GetTile
  href: Jelly.CollisionSystem.html#Jelly_CollisionSystem_GetTile_Microsoft_Xna_Framework_Point_
  name: GetTile
  nameWithType: CollisionSystem.GetTile
  fullName: Jelly.CollisionSystem.GetTile
- uid: Jelly.CollisionSystem.InWorld*
  commentId: Overload:Jelly.CollisionSystem.InWorld
  href: Jelly.CollisionSystem.html#Jelly_CollisionSystem_InWorld_Jelly_CollisionSystem_System_Int32_System_Int32_
  name: InWorld
  nameWithType: CollisionSystem.InWorld
  fullName: Jelly.CollisionSystem.InWorld
- uid: Jelly.CollisionSystem
  commentId: T:Jelly.CollisionSystem
  parent: Jelly
  href: Jelly.CollisionSystem.html
  name: CollisionSystem
  nameWithType: CollisionSystem
  fullName: Jelly.CollisionSystem
