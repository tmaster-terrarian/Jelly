### YamlMime:ManagedReference
items:
- uid: Jelly.Tag
  commentId: T:Jelly.Tag
  id: Tag
  parent: Jelly
  children:
  - Jelly.Tag.#ctor
  - Jelly.Tag.#ctor(System.UInt32)
  - Jelly.Tag.Add(Jelly.Tag)
  - Jelly.Tag.Add(System.UInt32)
  - Jelly.Tag.Bitmask
  - Jelly.Tag.Empty
  - Jelly.Tag.Equals(Jelly.Tag)
  - Jelly.Tag.Equals(System.Object)
  - Jelly.Tag.Matches(Jelly.Tag,Jelly.Tag,Jelly.Utilities.TagFilter)
  - Jelly.Tag.Matches(Jelly.Tag,Jelly.Utilities.TagFilter)
  - Jelly.Tag.Remove(Jelly.Tag)
  - Jelly.Tag.Remove(System.UInt32)
  - Jelly.Tag.op_BitwiseAnd(Jelly.Tag,Jelly.Tag)
  - Jelly.Tag.op_BitwiseOr(Jelly.Tag,Jelly.Tag)
  - Jelly.Tag.op_Equality(Jelly.Tag,Jelly.Tag)
  - Jelly.Tag.op_ExclusiveOr(Jelly.Tag,Jelly.Tag)
  - Jelly.Tag.op_Explicit(Jelly.Tag)~System.UInt32
  - Jelly.Tag.op_Explicit(System.UInt32)~Jelly.Tag
  - Jelly.Tag.op_Inequality(Jelly.Tag,Jelly.Tag)
  - Jelly.Tag.op_OnesComplement(Jelly.Tag)
  langs:
  - csharp
  - vb
  name: Tag
  nameWithType: Tag
  fullName: Jelly.Tag
  type: Struct
  source:
    remote:
      path: Jelly/Tag.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: Tag
    path: ../Jelly/Tag.cs
    startLine: 6
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: 'public struct Tag : IEquatable<Tag>'
    content.vb: Public Structure Tag Implements IEquatable(Of Tag)
  implements:
  - System.IEquatable{Jelly.Tag}
  inheritedMembers:
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: Jelly.Tag.#ctor(System.UInt32)
  commentId: M:Jelly.Tag.#ctor(System.UInt32)
  id: '#ctor(System.UInt32)'
  parent: Jelly.Tag
  langs:
  - csharp
  - vb
  name: Tag(uint)
  nameWithType: Tag.Tag(uint)
  fullName: Jelly.Tag.Tag(uint)
  type: Constructor
  source:
    remote:
      path: Jelly/Tag.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: .ctor
    path: ../Jelly/Tag.cs
    startLine: 6
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public Tag(uint bitmask)
    parameters:
    - id: bitmask
      type: System.UInt32
    content.vb: Public Sub New(bitmask As UInteger)
  overload: Jelly.Tag.#ctor*
  nameWithType.vb: Tag.New(UInteger)
  fullName.vb: Jelly.Tag.New(UInteger)
  name.vb: New(UInteger)
- uid: Jelly.Tag.Bitmask
  commentId: P:Jelly.Tag.Bitmask
  id: Bitmask
  parent: Jelly.Tag
  langs:
  - csharp
  - vb
  name: Bitmask
  nameWithType: Tag.Bitmask
  fullName: Jelly.Tag.Bitmask
  type: Property
  source:
    remote:
      path: Jelly/Tag.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: Bitmask
    path: ../Jelly/Tag.cs
    startLine: 8
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public uint Bitmask { readonly get; set; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public Property Bitmask As UInteger
  overload: Jelly.Tag.Bitmask*
- uid: Jelly.Tag.Empty
  commentId: P:Jelly.Tag.Empty
  id: Empty
  parent: Jelly.Tag
  langs:
  - csharp
  - vb
  name: Empty
  nameWithType: Tag.Empty
  fullName: Jelly.Tag.Empty
  type: Property
  source:
    remote:
      path: Jelly/Tag.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: Empty
    path: ../Jelly/Tag.cs
    startLine: 12
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public static Tag Empty { get; }
    parameters: []
    return:
      type: Jelly.Tag
    content.vb: Public Shared ReadOnly Property Empty As Tag
  overload: Jelly.Tag.Empty*
- uid: Jelly.Tag.#ctor
  commentId: M:Jelly.Tag.#ctor
  id: '#ctor'
  parent: Jelly.Tag
  langs:
  - csharp
  - vb
  name: Tag()
  nameWithType: Tag.Tag()
  fullName: Jelly.Tag.Tag()
  type: Constructor
  source:
    remote:
      path: Jelly/Tag.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: .ctor
    path: ../Jelly/Tag.cs
    startLine: 14
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public Tag()
    content.vb: Public Sub New()
  overload: Jelly.Tag.#ctor*
  nameWithType.vb: Tag.New()
  fullName.vb: Jelly.Tag.New()
  name.vb: New()
- uid: Jelly.Tag.Matches(Jelly.Tag,Jelly.Tag,Jelly.Utilities.TagFilter)
  commentId: M:Jelly.Tag.Matches(Jelly.Tag,Jelly.Tag,Jelly.Utilities.TagFilter)
  id: Matches(Jelly.Tag,Jelly.Tag,Jelly.Utilities.TagFilter)
  parent: Jelly.Tag
  langs:
  - csharp
  - vb
  name: Matches(Tag, Tag, TagFilter)
  nameWithType: Tag.Matches(Tag, Tag, TagFilter)
  fullName: Jelly.Tag.Matches(Jelly.Tag, Jelly.Tag, Jelly.Utilities.TagFilter)
  type: Method
  source:
    remote:
      path: Jelly/Tag.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: Matches
    path: ../Jelly/Tag.cs
    startLine: 18
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public static bool Matches(Tag tag1, Tag tag2, TagFilter filter)
    parameters:
    - id: tag1
      type: Jelly.Tag
    - id: tag2
      type: Jelly.Tag
    - id: filter
      type: Jelly.Utilities.TagFilter
    return:
      type: System.Boolean
    content.vb: Public Shared Function Matches(tag1 As Tag, tag2 As Tag, filter As TagFilter) As Boolean
  overload: Jelly.Tag.Matches*
- uid: Jelly.Tag.op_Explicit(System.UInt32)~Jelly.Tag
  commentId: M:Jelly.Tag.op_Explicit(System.UInt32)~Jelly.Tag
  id: op_Explicit(System.UInt32)~Jelly.Tag
  parent: Jelly.Tag
  langs:
  - csharp
  - vb
  name: explicit operator Tag(uint)
  nameWithType: Tag.explicit operator Tag(uint)
  fullName: Jelly.Tag.explicit operator Jelly.Tag(uint)
  type: Operator
  source:
    remote:
      path: Jelly/Tag.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: op_Explicit
    path: ../Jelly/Tag.cs
    startLine: 27
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public static explicit operator Tag(uint value)
    parameters:
    - id: value
      type: System.UInt32
    return:
      type: Jelly.Tag
    content.vb: Public Shared Narrowing Operator CType(value As UInteger) As Tag
  overload: Jelly.Tag.op_Explicit*
  nameWithType.vb: Tag.CType(UInteger)
  fullName.vb: Jelly.Tag.CType(UInteger)
  name.vb: CType(UInteger)
- uid: Jelly.Tag.op_Explicit(Jelly.Tag)~System.UInt32
  commentId: M:Jelly.Tag.op_Explicit(Jelly.Tag)~System.UInt32
  id: op_Explicit(Jelly.Tag)~System.UInt32
  parent: Jelly.Tag
  langs:
  - csharp
  - vb
  name: explicit operator uint(Tag)
  nameWithType: Tag.explicit operator uint(Tag)
  fullName: Jelly.Tag.explicit operator uint(Jelly.Tag)
  type: Operator
  source:
    remote:
      path: Jelly/Tag.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: op_Explicit
    path: ../Jelly/Tag.cs
    startLine: 29
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public static explicit operator uint(Tag value)
    parameters:
    - id: value
      type: Jelly.Tag
    return:
      type: System.UInt32
    content.vb: Public Shared Narrowing Operator CType(value As Tag) As UInteger
  overload: Jelly.Tag.op_Explicit*
  nameWithType.vb: Tag.CType(Tag)
  fullName.vb: Jelly.Tag.CType(Jelly.Tag)
  name.vb: CType(Tag)
- uid: Jelly.Tag.op_OnesComplement(Jelly.Tag)
  commentId: M:Jelly.Tag.op_OnesComplement(Jelly.Tag)
  id: op_OnesComplement(Jelly.Tag)
  parent: Jelly.Tag
  langs:
  - csharp
  - vb
  name: operator ~(Tag)
  nameWithType: Tag.operator ~(Tag)
  fullName: Jelly.Tag.operator ~(Jelly.Tag)
  type: Operator
  source:
    remote:
      path: Jelly/Tag.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: op_OnesComplement
    path: ../Jelly/Tag.cs
    startLine: 31
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public static Tag operator ~(Tag value)
    parameters:
    - id: value
      type: Jelly.Tag
    return:
      type: Jelly.Tag
    content.vb: Public Shared Operator Not(value As Tag) As Tag
  overload: Jelly.Tag.op_OnesComplement*
  nameWithType.vb: Tag.Not(Tag)
  fullName.vb: Jelly.Tag.Not(Jelly.Tag)
  name.vb: Not(Tag)
- uid: Jelly.Tag.op_BitwiseAnd(Jelly.Tag,Jelly.Tag)
  commentId: M:Jelly.Tag.op_BitwiseAnd(Jelly.Tag,Jelly.Tag)
  id: op_BitwiseAnd(Jelly.Tag,Jelly.Tag)
  parent: Jelly.Tag
  langs:
  - csharp
  - vb
  name: operator &(Tag, Tag)
  nameWithType: Tag.operator &(Tag, Tag)
  fullName: Jelly.Tag.operator &(Jelly.Tag, Jelly.Tag)
  type: Operator
  source:
    remote:
      path: Jelly/Tag.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: op_BitwiseAnd
    path: ../Jelly/Tag.cs
    startLine: 33
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public static Tag operator &(Tag left, Tag right)
    parameters:
    - id: left
      type: Jelly.Tag
    - id: right
      type: Jelly.Tag
    return:
      type: Jelly.Tag
    content.vb: Public Shared Operator And(left As Tag, right As Tag) As Tag
  overload: Jelly.Tag.op_BitwiseAnd*
  nameWithType.vb: Tag.And(Tag, Tag)
  fullName.vb: Jelly.Tag.And(Jelly.Tag, Jelly.Tag)
  name.vb: And(Tag, Tag)
- uid: Jelly.Tag.op_BitwiseOr(Jelly.Tag,Jelly.Tag)
  commentId: M:Jelly.Tag.op_BitwiseOr(Jelly.Tag,Jelly.Tag)
  id: op_BitwiseOr(Jelly.Tag,Jelly.Tag)
  parent: Jelly.Tag
  langs:
  - csharp
  - vb
  name: operator |(Tag, Tag)
  nameWithType: Tag.operator |(Tag, Tag)
  fullName: Jelly.Tag.operator |(Jelly.Tag, Jelly.Tag)
  type: Operator
  source:
    remote:
      path: Jelly/Tag.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: op_BitwiseOr
    path: ../Jelly/Tag.cs
    startLine: 35
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public static Tag operator |(Tag left, Tag right)
    parameters:
    - id: left
      type: Jelly.Tag
    - id: right
      type: Jelly.Tag
    return:
      type: Jelly.Tag
    content.vb: Public Shared Operator Or(left As Tag, right As Tag) As Tag
  overload: Jelly.Tag.op_BitwiseOr*
  nameWithType.vb: Tag.Or(Tag, Tag)
  fullName.vb: Jelly.Tag.Or(Jelly.Tag, Jelly.Tag)
  name.vb: Or(Tag, Tag)
- uid: Jelly.Tag.op_ExclusiveOr(Jelly.Tag,Jelly.Tag)
  commentId: M:Jelly.Tag.op_ExclusiveOr(Jelly.Tag,Jelly.Tag)
  id: op_ExclusiveOr(Jelly.Tag,Jelly.Tag)
  parent: Jelly.Tag
  langs:
  - csharp
  - vb
  name: operator ^(Tag, Tag)
  nameWithType: Tag.operator ^(Tag, Tag)
  fullName: Jelly.Tag.operator ^(Jelly.Tag, Jelly.Tag)
  type: Operator
  source:
    remote:
      path: Jelly/Tag.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: op_ExclusiveOr
    path: ../Jelly/Tag.cs
    startLine: 37
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public static Tag operator ^(Tag left, Tag right)
    parameters:
    - id: left
      type: Jelly.Tag
    - id: right
      type: Jelly.Tag
    return:
      type: Jelly.Tag
    content.vb: Public Shared Operator Xor(left As Tag, right As Tag) As Tag
  overload: Jelly.Tag.op_ExclusiveOr*
  nameWithType.vb: Tag.Xor(Tag, Tag)
  fullName.vb: Jelly.Tag.Xor(Jelly.Tag, Jelly.Tag)
  name.vb: Xor(Tag, Tag)
- uid: Jelly.Tag.Matches(Jelly.Tag,Jelly.Utilities.TagFilter)
  commentId: M:Jelly.Tag.Matches(Jelly.Tag,Jelly.Utilities.TagFilter)
  id: Matches(Jelly.Tag,Jelly.Utilities.TagFilter)
  parent: Jelly.Tag
  langs:
  - csharp
  - vb
  name: Matches(Tag, TagFilter)
  nameWithType: Tag.Matches(Tag, TagFilter)
  fullName: Jelly.Tag.Matches(Jelly.Tag, Jelly.Utilities.TagFilter)
  type: Method
  source:
    remote:
      path: Jelly/Tag.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: Matches
    path: ../Jelly/Tag.cs
    startLine: 39
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public readonly bool Matches(Tag other, TagFilter filter)
    parameters:
    - id: other
      type: Jelly.Tag
    - id: filter
      type: Jelly.Utilities.TagFilter
    return:
      type: System.Boolean
    content.vb: Public Function Matches(other As Tag, filter As TagFilter) As Boolean
  overload: Jelly.Tag.Matches*
- uid: Jelly.Tag.Add(Jelly.Tag)
  commentId: M:Jelly.Tag.Add(Jelly.Tag)
  id: Add(Jelly.Tag)
  parent: Jelly.Tag
  langs:
  - csharp
  - vb
  name: Add(Tag)
  nameWithType: Tag.Add(Tag)
  fullName: Jelly.Tag.Add(Jelly.Tag)
  type: Method
  source:
    remote:
      path: Jelly/Tag.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: Add
    path: ../Jelly/Tag.cs
    startLine: 41
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public void Add(Tag tag)
    parameters:
    - id: tag
      type: Jelly.Tag
    content.vb: Public Sub Add(tag As Tag)
  overload: Jelly.Tag.Add*
- uid: Jelly.Tag.Add(System.UInt32)
  commentId: M:Jelly.Tag.Add(System.UInt32)
  id: Add(System.UInt32)
  parent: Jelly.Tag
  langs:
  - csharp
  - vb
  name: Add(uint)
  nameWithType: Tag.Add(uint)
  fullName: Jelly.Tag.Add(uint)
  type: Method
  source:
    remote:
      path: Jelly/Tag.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: Add
    path: ../Jelly/Tag.cs
    startLine: 43
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public void Add(uint tag)
    parameters:
    - id: tag
      type: System.UInt32
    content.vb: Public Sub Add(tag As UInteger)
  overload: Jelly.Tag.Add*
  nameWithType.vb: Tag.Add(UInteger)
  fullName.vb: Jelly.Tag.Add(UInteger)
  name.vb: Add(UInteger)
- uid: Jelly.Tag.Remove(Jelly.Tag)
  commentId: M:Jelly.Tag.Remove(Jelly.Tag)
  id: Remove(Jelly.Tag)
  parent: Jelly.Tag
  langs:
  - csharp
  - vb
  name: Remove(Tag)
  nameWithType: Tag.Remove(Tag)
  fullName: Jelly.Tag.Remove(Jelly.Tag)
  type: Method
  source:
    remote:
      path: Jelly/Tag.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: Remove
    path: ../Jelly/Tag.cs
    startLine: 45
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public void Remove(Tag tag)
    parameters:
    - id: tag
      type: Jelly.Tag
    content.vb: Public Sub Remove(tag As Tag)
  overload: Jelly.Tag.Remove*
- uid: Jelly.Tag.Remove(System.UInt32)
  commentId: M:Jelly.Tag.Remove(System.UInt32)
  id: Remove(System.UInt32)
  parent: Jelly.Tag
  langs:
  - csharp
  - vb
  name: Remove(uint)
  nameWithType: Tag.Remove(uint)
  fullName: Jelly.Tag.Remove(uint)
  type: Method
  source:
    remote:
      path: Jelly/Tag.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: Remove
    path: ../Jelly/Tag.cs
    startLine: 47
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public void Remove(uint tag)
    parameters:
    - id: tag
      type: System.UInt32
    content.vb: Public Sub Remove(tag As UInteger)
  overload: Jelly.Tag.Remove*
  nameWithType.vb: Tag.Remove(UInteger)
  fullName.vb: Jelly.Tag.Remove(UInteger)
  name.vb: Remove(UInteger)
- uid: Jelly.Tag.Equals(Jelly.Tag)
  commentId: M:Jelly.Tag.Equals(Jelly.Tag)
  id: Equals(Jelly.Tag)
  parent: Jelly.Tag
  langs:
  - csharp
  - vb
  name: Equals(Tag)
  nameWithType: Tag.Equals(Tag)
  fullName: Jelly.Tag.Equals(Jelly.Tag)
  type: Method
  source:
    remote:
      path: Jelly/Tag.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: Equals
    path: ../Jelly/Tag.cs
    startLine: 49
  assemblies:
  - Jelly
  namespace: Jelly
  summary: Indicates whether the current object is equal to another object of the same type.
  example: []
  syntax:
    content: public readonly bool Equals(Tag other)
    parameters:
    - id: other
      type: Jelly.Tag
      description: An object to compare with this object.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the current object is equal to the <code class="paramref">other</code> parameter; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function Equals(other As Tag) As Boolean
  overload: Jelly.Tag.Equals*
  implements:
  - System.IEquatable{Jelly.Tag}.Equals(Jelly.Tag)
- uid: Jelly.Tag.Equals(System.Object)
  commentId: M:Jelly.Tag.Equals(System.Object)
  id: Equals(System.Object)
  parent: Jelly.Tag
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: Tag.Equals(object)
  fullName: Jelly.Tag.Equals(object)
  type: Method
  source:
    remote:
      path: Jelly/Tag.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: Equals
    path: ../Jelly/Tag.cs
    startLine: 54
  assemblies:
  - Jelly
  namespace: Jelly
  summary: Indicates whether this instance and a specified object are equal.
  example: []
  syntax:
    content: public override readonly bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current instance.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if <code class="paramref">obj</code> and this instance are the same type and represent the same value; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: Jelly.Tag.Equals*
  nameWithType.vb: Tag.Equals(Object)
  fullName.vb: Jelly.Tag.Equals(Object)
  name.vb: Equals(Object)
- uid: Jelly.Tag.op_Equality(Jelly.Tag,Jelly.Tag)
  commentId: M:Jelly.Tag.op_Equality(Jelly.Tag,Jelly.Tag)
  id: op_Equality(Jelly.Tag,Jelly.Tag)
  parent: Jelly.Tag
  langs:
  - csharp
  - vb
  name: operator ==(Tag, Tag)
  nameWithType: Tag.operator ==(Tag, Tag)
  fullName: Jelly.Tag.operator ==(Jelly.Tag, Jelly.Tag)
  type: Operator
  source:
    remote:
      path: Jelly/Tag.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: op_Equality
    path: ../Jelly/Tag.cs
    startLine: 59
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public static bool operator ==(Tag left, Tag right)
    parameters:
    - id: left
      type: Jelly.Tag
    - id: right
      type: Jelly.Tag
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(left As Tag, right As Tag) As Boolean
  overload: Jelly.Tag.op_Equality*
  nameWithType.vb: Tag.=(Tag, Tag)
  fullName.vb: Jelly.Tag.=(Jelly.Tag, Jelly.Tag)
  name.vb: =(Tag, Tag)
- uid: Jelly.Tag.op_Inequality(Jelly.Tag,Jelly.Tag)
  commentId: M:Jelly.Tag.op_Inequality(Jelly.Tag,Jelly.Tag)
  id: op_Inequality(Jelly.Tag,Jelly.Tag)
  parent: Jelly.Tag
  langs:
  - csharp
  - vb
  name: operator !=(Tag, Tag)
  nameWithType: Tag.operator !=(Tag, Tag)
  fullName: Jelly.Tag.operator !=(Jelly.Tag, Jelly.Tag)
  type: Operator
  source:
    remote:
      path: Jelly/Tag.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: op_Inequality
    path: ../Jelly/Tag.cs
    startLine: 64
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public static bool operator !=(Tag left, Tag right)
    parameters:
    - id: left
      type: Jelly.Tag
    - id: right
      type: Jelly.Tag
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(left As Tag, right As Tag) As Boolean
  overload: Jelly.Tag.op_Inequality*
  nameWithType.vb: Tag.<>(Tag, Tag)
  fullName.vb: Jelly.Tag.<>(Jelly.Tag, Jelly.Tag)
  name.vb: <>(Tag, Tag)
references:
- uid: Jelly
  commentId: N:Jelly
  href: Jelly.html
  name: Jelly
  nameWithType: Jelly
  fullName: Jelly
- uid: System.IEquatable{Jelly.Tag}
  commentId: T:System.IEquatable{Jelly.Tag}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<Tag>
  nameWithType: IEquatable<Tag>
  fullName: System.IEquatable<Jelly.Tag>
  nameWithType.vb: IEquatable(Of Tag)
  fullName.vb: System.IEquatable(Of Jelly.Tag)
  name.vb: IEquatable(Of Tag)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: Jelly.Tag
    name: Tag
    href: Jelly.Tag.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Jelly.Tag
    name: Tag
    href: Jelly.Tag.html
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Jelly.Tag.#ctor*
  commentId: Overload:Jelly.Tag.#ctor
  href: Jelly.Tag.html#Jelly_Tag__ctor_System_UInt32_
  name: Tag
  nameWithType: Tag.Tag
  fullName: Jelly.Tag.Tag
  nameWithType.vb: Tag.New
  fullName.vb: Jelly.Tag.New
  name.vb: New
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: Jelly.Tag.Bitmask*
  commentId: Overload:Jelly.Tag.Bitmask
  href: Jelly.Tag.html#Jelly_Tag_Bitmask
  name: Bitmask
  nameWithType: Tag.Bitmask
  fullName: Jelly.Tag.Bitmask
- uid: Jelly.Tag.Empty*
  commentId: Overload:Jelly.Tag.Empty
  href: Jelly.Tag.html#Jelly_Tag_Empty
  name: Empty
  nameWithType: Tag.Empty
  fullName: Jelly.Tag.Empty
- uid: Jelly.Tag
  commentId: T:Jelly.Tag
  parent: Jelly
  href: Jelly.Tag.html
  name: Tag
  nameWithType: Tag
  fullName: Jelly.Tag
- uid: Jelly.Tag.Matches*
  commentId: Overload:Jelly.Tag.Matches
  href: Jelly.Tag.html#Jelly_Tag_Matches_Jelly_Tag_Jelly_Tag_Jelly_Utilities_TagFilter_
  name: Matches
  nameWithType: Tag.Matches
  fullName: Jelly.Tag.Matches
- uid: Jelly.Utilities.TagFilter
  commentId: T:Jelly.Utilities.TagFilter
  parent: Jelly.Utilities
  href: Jelly.Utilities.TagFilter.html
  name: TagFilter
  nameWithType: TagFilter
  fullName: Jelly.Utilities.TagFilter
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Jelly.Utilities
  commentId: N:Jelly.Utilities
  href: Jelly.html
  name: Jelly.Utilities
  nameWithType: Jelly.Utilities
  fullName: Jelly.Utilities
  spec.csharp:
  - uid: Jelly
    name: Jelly
    href: Jelly.html
  - name: .
  - uid: Jelly.Utilities
    name: Utilities
    href: Jelly.Utilities.html
  spec.vb:
  - uid: Jelly
    name: Jelly
    href: Jelly.html
  - name: .
  - uid: Jelly.Utilities
    name: Utilities
    href: Jelly.Utilities.html
- uid: Jelly.Tag.op_Explicit*
  commentId: Overload:Jelly.Tag.op_Explicit
  name: explicit operator
  nameWithType: Tag.explicit operator
  fullName: Jelly.Tag.explicit operator
  nameWithType.vb: Tag.CType
  fullName.vb: Jelly.Tag.CType
  name.vb: CType
  spec.csharp:
  - name: explicit
  - name: " "
  - name: operator
- uid: Jelly.Tag.op_OnesComplement*
  commentId: Overload:Jelly.Tag.op_OnesComplement
  href: Jelly.Tag.html#Jelly_Tag_op_OnesComplement_Jelly_Tag_
  name: operator ~
  nameWithType: Tag.operator ~
  fullName: Jelly.Tag.operator ~
  nameWithType.vb: Tag.Not
  fullName.vb: Jelly.Tag.Not
  name.vb: Not
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Jelly.Tag.op_OnesComplement*
    name: "~"
    href: Jelly.Tag.html#Jelly_Tag_op_OnesComplement_Jelly_Tag_
- uid: Jelly.Tag.op_BitwiseAnd*
  commentId: Overload:Jelly.Tag.op_BitwiseAnd
  href: Jelly.Tag.html#Jelly_Tag_op_BitwiseAnd_Jelly_Tag_Jelly_Tag_
  name: operator &
  nameWithType: Tag.operator &
  fullName: Jelly.Tag.operator &
  nameWithType.vb: Tag.And
  fullName.vb: Jelly.Tag.And
  name.vb: And
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Jelly.Tag.op_BitwiseAnd*
    name: '&'
    href: Jelly.Tag.html#Jelly_Tag_op_BitwiseAnd_Jelly_Tag_Jelly_Tag_
- uid: Jelly.Tag.op_BitwiseOr*
  commentId: Overload:Jelly.Tag.op_BitwiseOr
  href: Jelly.Tag.html#Jelly_Tag_op_BitwiseOr_Jelly_Tag_Jelly_Tag_
  name: operator |
  nameWithType: Tag.operator |
  fullName: Jelly.Tag.operator |
  nameWithType.vb: Tag.Or
  fullName.vb: Jelly.Tag.Or
  name.vb: Or
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Jelly.Tag.op_BitwiseOr*
    name: '|'
    href: Jelly.Tag.html#Jelly_Tag_op_BitwiseOr_Jelly_Tag_Jelly_Tag_
- uid: Jelly.Tag.op_ExclusiveOr*
  commentId: Overload:Jelly.Tag.op_ExclusiveOr
  href: Jelly.Tag.html#Jelly_Tag_op_ExclusiveOr_Jelly_Tag_Jelly_Tag_
  name: operator ^
  nameWithType: Tag.operator ^
  fullName: Jelly.Tag.operator ^
  nameWithType.vb: Tag.Xor
  fullName.vb: Jelly.Tag.Xor
  name.vb: Xor
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Jelly.Tag.op_ExclusiveOr*
    name: ^
    href: Jelly.Tag.html#Jelly_Tag_op_ExclusiveOr_Jelly_Tag_Jelly_Tag_
- uid: Jelly.Tag.Add*
  commentId: Overload:Jelly.Tag.Add
  href: Jelly.Tag.html#Jelly_Tag_Add_Jelly_Tag_
  name: Add
  nameWithType: Tag.Add
  fullName: Jelly.Tag.Add
- uid: Jelly.Tag.Remove*
  commentId: Overload:Jelly.Tag.Remove
  href: Jelly.Tag.html#Jelly_Tag_Remove_Jelly_Tag_
  name: Remove
  nameWithType: Tag.Remove
  fullName: Jelly.Tag.Remove
- uid: Jelly.Tag.Equals*
  commentId: Overload:Jelly.Tag.Equals
  href: Jelly.Tag.html#Jelly_Tag_Equals_Jelly_Tag_
  name: Equals
  nameWithType: Tag.Equals
  fullName: Jelly.Tag.Equals
- uid: System.IEquatable{Jelly.Tag}.Equals(Jelly.Tag)
  commentId: M:System.IEquatable{Jelly.Tag}.Equals(Jelly.Tag)
  parent: System.IEquatable{Jelly.Tag}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(Tag)
  nameWithType: IEquatable<Tag>.Equals(Tag)
  fullName: System.IEquatable<Jelly.Tag>.Equals(Jelly.Tag)
  nameWithType.vb: IEquatable(Of Tag).Equals(Tag)
  fullName.vb: System.IEquatable(Of Jelly.Tag).Equals(Jelly.Tag)
  spec.csharp:
  - uid: System.IEquatable{Jelly.Tag}.Equals(Jelly.Tag)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: Jelly.Tag
    name: Tag
    href: Jelly.Tag.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{Jelly.Tag}.Equals(Jelly.Tag)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: Jelly.Tag
    name: Tag
    href: Jelly.Tag.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Jelly.Tag.op_Equality*
  commentId: Overload:Jelly.Tag.op_Equality
  href: Jelly.Tag.html#Jelly_Tag_op_Equality_Jelly_Tag_Jelly_Tag_
  name: operator ==
  nameWithType: Tag.operator ==
  fullName: Jelly.Tag.operator ==
  nameWithType.vb: Tag.=
  fullName.vb: Jelly.Tag.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Jelly.Tag.op_Equality*
    name: ==
    href: Jelly.Tag.html#Jelly_Tag_op_Equality_Jelly_Tag_Jelly_Tag_
- uid: Jelly.Tag.op_Inequality*
  commentId: Overload:Jelly.Tag.op_Inequality
  href: Jelly.Tag.html#Jelly_Tag_op_Inequality_Jelly_Tag_Jelly_Tag_
  name: operator !=
  nameWithType: Tag.operator !=
  fullName: Jelly.Tag.operator !=
  nameWithType.vb: Tag.<>
  fullName.vb: Jelly.Tag.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Jelly.Tag.op_Inequality*
    name: '!='
    href: Jelly.Tag.html#Jelly_Tag_op_Inequality_Jelly_Tag_Jelly_Tag_
