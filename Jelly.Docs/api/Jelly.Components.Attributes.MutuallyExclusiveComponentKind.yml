### YamlMime:ManagedReference
items:
- uid: Jelly.Components.Attributes.MutuallyExclusiveComponentKind
  commentId: T:Jelly.Components.Attributes.MutuallyExclusiveComponentKind
  id: MutuallyExclusiveComponentKind
  parent: Jelly.Components.Attributes
  children:
  - Jelly.Components.Attributes.MutuallyExclusiveComponentKind.Default
  - Jelly.Components.Attributes.MutuallyExclusiveComponentKind.Throw
  - Jelly.Components.Attributes.MutuallyExclusiveComponentKind.Warn
  langs:
  - csharp
  - vb
  name: MutuallyExclusiveComponentKind
  nameWithType: MutuallyExclusiveComponentKind
  fullName: Jelly.Components.Attributes.MutuallyExclusiveComponentKind
  type: Enum
  source:
    remote:
      path: Jelly/Components/Attributes/MutuallyExclusiveComponentAttribute.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: MutuallyExclusiveComponentKind
    path: ../Jelly/Components/Attributes/MutuallyExclusiveComponentAttribute.cs
    startLine: 10
  assemblies:
  - Jelly
  namespace: Jelly.Components.Attributes
  syntax:
    content: public enum MutuallyExclusiveComponentKind
    content.vb: Public Enum MutuallyExclusiveComponentKind
- uid: Jelly.Components.Attributes.MutuallyExclusiveComponentKind.Default
  commentId: F:Jelly.Components.Attributes.MutuallyExclusiveComponentKind.Default
  id: Default
  parent: Jelly.Components.Attributes.MutuallyExclusiveComponentKind
  langs:
  - csharp
  - vb
  name: Default
  nameWithType: MutuallyExclusiveComponentKind.Default
  fullName: Jelly.Components.Attributes.MutuallyExclusiveComponentKind.Default
  type: Field
  source:
    remote:
      path: Jelly/Components/Attributes/MutuallyExclusiveComponentAttribute.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: Default
    path: ../Jelly/Components/Attributes/MutuallyExclusiveComponentAttribute.cs
    startLine: 15
  assemblies:
  - Jelly
  namespace: Jelly.Components.Attributes
  summary: Automatically remove conflicting <xref href="Jelly.Component" data-throw-if-not-resolved="false"></xref>s when adding an instance of this <xref href="Jelly.Component" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: Default = 0
    return:
      type: Jelly.Components.Attributes.MutuallyExclusiveComponentKind
- uid: Jelly.Components.Attributes.MutuallyExclusiveComponentKind.Warn
  commentId: F:Jelly.Components.Attributes.MutuallyExclusiveComponentKind.Warn
  id: Warn
  parent: Jelly.Components.Attributes.MutuallyExclusiveComponentKind
  langs:
  - csharp
  - vb
  name: Warn
  nameWithType: MutuallyExclusiveComponentKind.Warn
  fullName: Jelly.Components.Attributes.MutuallyExclusiveComponentKind.Warn
  type: Field
  source:
    remote:
      path: Jelly/Components/Attributes/MutuallyExclusiveComponentAttribute.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: Warn
    path: ../Jelly/Components/Attributes/MutuallyExclusiveComponentAttribute.cs
    startLine: 20
  assemblies:
  - Jelly
  namespace: Jelly.Components.Attributes
  summary: Don't resolve conflicting <xref href="Jelly.Component" data-throw-if-not-resolved="false"></xref>s and log a warning.
  example: []
  syntax:
    content: Warn = 1
    return:
      type: Jelly.Components.Attributes.MutuallyExclusiveComponentKind
- uid: Jelly.Components.Attributes.MutuallyExclusiveComponentKind.Throw
  commentId: F:Jelly.Components.Attributes.MutuallyExclusiveComponentKind.Throw
  id: Throw
  parent: Jelly.Components.Attributes.MutuallyExclusiveComponentKind
  langs:
  - csharp
  - vb
  name: Throw
  nameWithType: MutuallyExclusiveComponentKind.Throw
  fullName: Jelly.Components.Attributes.MutuallyExclusiveComponentKind.Throw
  type: Field
  source:
    remote:
      path: Jelly/Components/Attributes/MutuallyExclusiveComponentAttribute.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: Throw
    path: ../Jelly/Components/Attributes/MutuallyExclusiveComponentAttribute.cs
    startLine: 25
  assemblies:
  - Jelly
  namespace: Jelly.Components.Attributes
  summary: Don't resolve conflicting <xref href="Jelly.Component" data-throw-if-not-resolved="false"></xref>s and throw an Exception.
  example: []
  syntax:
    content: Throw = 2
    return:
      type: Jelly.Components.Attributes.MutuallyExclusiveComponentKind
references:
- uid: Jelly.Components.Attributes
  commentId: N:Jelly.Components.Attributes
  href: Jelly.html
  name: Jelly.Components.Attributes
  nameWithType: Jelly.Components.Attributes
  fullName: Jelly.Components.Attributes
  spec.csharp:
  - uid: Jelly
    name: Jelly
    href: Jelly.html
  - name: .
  - uid: Jelly.Components
    name: Components
    href: Jelly.Components.html
  - name: .
  - uid: Jelly.Components.Attributes
    name: Attributes
    href: Jelly.Components.Attributes.html
  spec.vb:
  - uid: Jelly
    name: Jelly
    href: Jelly.html
  - name: .
  - uid: Jelly.Components
    name: Components
    href: Jelly.Components.html
  - name: .
  - uid: Jelly.Components.Attributes
    name: Attributes
    href: Jelly.Components.Attributes.html
- uid: Jelly.Component
  commentId: T:Jelly.Component
  parent: Jelly
  href: Jelly.Component.html
  name: Component
  nameWithType: Component
  fullName: Jelly.Component
- uid: Jelly.Components.Attributes.MutuallyExclusiveComponentKind
  commentId: T:Jelly.Components.Attributes.MutuallyExclusiveComponentKind
  parent: Jelly.Components.Attributes
  href: Jelly.Components.Attributes.MutuallyExclusiveComponentKind.html
  name: MutuallyExclusiveComponentKind
  nameWithType: MutuallyExclusiveComponentKind
  fullName: Jelly.Components.Attributes.MutuallyExclusiveComponentKind
- uid: Jelly
  commentId: N:Jelly
  href: Jelly.html
  name: Jelly
  nameWithType: Jelly
  fullName: Jelly
