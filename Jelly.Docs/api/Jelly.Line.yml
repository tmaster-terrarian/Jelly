### YamlMime:ManagedReference
items:
- uid: Jelly.Line
  commentId: T:Jelly.Line
  id: Line
  parent: Jelly
  children:
  - Jelly.Line.#ctor(Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point,System.Int32)
  - Jelly.Line.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - Jelly.Line.Contains(Microsoft.Xna.Framework.Point)
  - Jelly.Line.Empty
  - Jelly.Line.Equals(Jelly.Line)
  - Jelly.Line.Equals(System.Object)
  - Jelly.Line.Intersects(Jelly.Line)
  - Jelly.Line.Intersects(Microsoft.Xna.Framework.Rectangle)
  - Jelly.Line.Item(System.Int32)
  - Jelly.Line.P1
  - Jelly.Line.P2
  - Jelly.Line.Shift(Microsoft.Xna.Framework.Point)
  - Jelly.Line.Shift(System.Int32,System.Int32)
  - Jelly.Line.Thickness
  - Jelly.Line.op_Equality(Jelly.Line,Jelly.Line)
  - Jelly.Line.op_Inequality(Jelly.Line,Jelly.Line)
  langs:
  - csharp
  - vb
  name: Line
  nameWithType: Line
  fullName: Jelly.Line
  type: Struct
  source:
    remote:
      path: Jelly/Line.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: Line
    path: ../Jelly/Line.cs
    startLine: 10
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: >-
      [DataContract]

      public struct Line : IEquatable<Line>
    content.vb: >-
      <DataContract>

      Public Structure Line Implements IEquatable(Of Line)
  implements:
  - System.IEquatable{Jelly.Line}
  inheritedMembers:
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
- uid: Jelly.Line.P1
  commentId: P:Jelly.Line.P1
  id: P1
  parent: Jelly.Line
  langs:
  - csharp
  - vb
  name: P1
  nameWithType: Line.P1
  fullName: Jelly.Line.P1
  type: Property
  source:
    remote:
      path: Jelly/Line.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: P1
    path: ../Jelly/Line.cs
    startLine: 13
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: >-
      [DataMember]

      [JsonPropertyName("start")]

      public Point P1 { readonly get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Point
    content.vb: >-
      <DataMember>

      <JsonPropertyName("start")>

      Public Property P1 As Point
  overload: Jelly.Line.P1*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: start
- uid: Jelly.Line.P2
  commentId: P:Jelly.Line.P2
  id: P2
  parent: Jelly.Line
  langs:
  - csharp
  - vb
  name: P2
  nameWithType: Line.P2
  fullName: Jelly.Line.P2
  type: Property
  source:
    remote:
      path: Jelly/Line.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: P2
    path: ../Jelly/Line.cs
    startLine: 17
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: >-
      [DataMember]

      [JsonPropertyName("end")]

      public Point P2 { readonly get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Point
    content.vb: >-
      <DataMember>

      <JsonPropertyName("end")>

      Public Property P2 As Point
  overload: Jelly.Line.P2*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: end
- uid: Jelly.Line.Thickness
  commentId: P:Jelly.Line.Thickness
  id: Thickness
  parent: Jelly.Line
  langs:
  - csharp
  - vb
  name: Thickness
  nameWithType: Line.Thickness
  fullName: Jelly.Line.Thickness
  type: Property
  source:
    remote:
      path: Jelly/Line.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: Thickness
    path: ../Jelly/Line.cs
    startLine: 21
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public int Thickness { readonly get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Thickness As Integer
  overload: Jelly.Line.Thickness*
- uid: Jelly.Line.Empty
  commentId: P:Jelly.Line.Empty
  id: Empty
  parent: Jelly.Line
  langs:
  - csharp
  - vb
  name: Empty
  nameWithType: Line.Empty
  fullName: Jelly.Line.Empty
  type: Property
  source:
    remote:
      path: Jelly/Line.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: Empty
    path: ../Jelly/Line.cs
    startLine: 23
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public static Line Empty { get; }
    parameters: []
    return:
      type: Jelly.Line
    content.vb: Public Shared ReadOnly Property Empty As Line
  overload: Jelly.Line.Empty*
- uid: Jelly.Line.Item(System.Int32)
  commentId: P:Jelly.Line.Item(System.Int32)
  id: Item(System.Int32)
  parent: Jelly.Line
  langs:
  - csharp
  - vb
  name: this[int]
  nameWithType: Line.this[int]
  fullName: Jelly.Line.this[int]
  type: Property
  source:
    remote:
      path: Jelly/Line.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: this[]
    path: ../Jelly/Line.cs
    startLine: 25
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: >-
      [JsonIgnore]

      public Point this[int index] { readonly get; set; }
    parameters:
    - id: index
      type: System.Int32
    return:
      type: Microsoft.Xna.Framework.Point
    content.vb: >-
      <JsonIgnore>

      Public Default Property this[](index As Integer) As Point
  overload: Jelly.Line.Item*
  attributes:
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
  nameWithType.vb: Line.this[](Integer)
  fullName.vb: Jelly.Line.this[](Integer)
  name.vb: this[](Integer)
- uid: Jelly.Line.#ctor(Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point,System.Int32)
  commentId: M:Jelly.Line.#ctor(Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point,System.Int32)
  id: '#ctor(Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point,System.Int32)'
  parent: Jelly.Line
  langs:
  - csharp
  - vb
  name: Line(Point, Point, int)
  nameWithType: Line.Line(Point, Point, int)
  fullName: Jelly.Line.Line(Microsoft.Xna.Framework.Point, Microsoft.Xna.Framework.Point, int)
  type: Constructor
  source:
    remote:
      path: Jelly/Line.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: .ctor
    path: ../Jelly/Line.cs
    startLine: 48
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public Line(Point p1, Point p2, int thickness = 1)
    parameters:
    - id: p1
      type: Microsoft.Xna.Framework.Point
    - id: p2
      type: Microsoft.Xna.Framework.Point
    - id: thickness
      type: System.Int32
    content.vb: Public Sub New(p1 As Point, p2 As Point, thickness As Integer = 1)
  overload: Jelly.Line.#ctor*
  nameWithType.vb: Line.New(Point, Point, Integer)
  fullName.vb: Jelly.Line.New(Microsoft.Xna.Framework.Point, Microsoft.Xna.Framework.Point, Integer)
  name.vb: New(Point, Point, Integer)
- uid: Jelly.Line.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Jelly.Line.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: Jelly.Line
  langs:
  - csharp
  - vb
  name: Line(int, int, int, int, int)
  nameWithType: Line.Line(int, int, int, int, int)
  fullName: Jelly.Line.Line(int, int, int, int, int)
  type: Constructor
  source:
    remote:
      path: Jelly/Line.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: .ctor
    path: ../Jelly/Line.cs
    startLine: 55
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public Line(int x1, int y1, int x2, int y2, int thickness = 1)
    parameters:
    - id: x1
      type: System.Int32
    - id: y1
      type: System.Int32
    - id: x2
      type: System.Int32
    - id: y2
      type: System.Int32
    - id: thickness
      type: System.Int32
    content.vb: Public Sub New(x1 As Integer, y1 As Integer, x2 As Integer, y2 As Integer, thickness As Integer = 1)
  overload: Jelly.Line.#ctor*
  nameWithType.vb: Line.New(Integer, Integer, Integer, Integer, Integer)
  fullName.vb: Jelly.Line.New(Integer, Integer, Integer, Integer, Integer)
  name.vb: New(Integer, Integer, Integer, Integer, Integer)
- uid: Jelly.Line.Intersects(Microsoft.Xna.Framework.Rectangle)
  commentId: M:Jelly.Line.Intersects(Microsoft.Xna.Framework.Rectangle)
  id: Intersects(Microsoft.Xna.Framework.Rectangle)
  parent: Jelly.Line
  langs:
  - csharp
  - vb
  name: Intersects(Rectangle)
  nameWithType: Line.Intersects(Rectangle)
  fullName: Jelly.Line.Intersects(Microsoft.Xna.Framework.Rectangle)
  type: Method
  source:
    remote:
      path: Jelly/Line.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: Intersects
    path: ../Jelly/Line.cs
    startLine: 62
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public readonly bool Intersects(Rectangle rectangle)
    parameters:
    - id: rectangle
      type: Microsoft.Xna.Framework.Rectangle
    return:
      type: System.Boolean
    content.vb: Public Function Intersects(rectangle As Rectangle) As Boolean
  overload: Jelly.Line.Intersects*
- uid: Jelly.Line.Contains(Microsoft.Xna.Framework.Point)
  commentId: M:Jelly.Line.Contains(Microsoft.Xna.Framework.Point)
  id: Contains(Microsoft.Xna.Framework.Point)
  parent: Jelly.Line
  langs:
  - csharp
  - vb
  name: Contains(Point)
  nameWithType: Line.Contains(Point)
  fullName: Jelly.Line.Contains(Microsoft.Xna.Framework.Point)
  type: Method
  source:
    remote:
      path: Jelly/Line.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: Contains
    path: ../Jelly/Line.cs
    startLine: 115
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public readonly bool Contains(Point point)
    parameters:
    - id: point
      type: Microsoft.Xna.Framework.Point
    return:
      type: System.Boolean
    content.vb: Public Function Contains(point As Point) As Boolean
  overload: Jelly.Line.Contains*
- uid: Jelly.Line.Intersects(Jelly.Line)
  commentId: M:Jelly.Line.Intersects(Jelly.Line)
  id: Intersects(Jelly.Line)
  parent: Jelly.Line
  langs:
  - csharp
  - vb
  name: Intersects(Line)
  nameWithType: Line.Intersects(Line)
  fullName: Jelly.Line.Intersects(Jelly.Line)
  type: Method
  source:
    remote:
      path: Jelly/Line.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: Intersects
    path: ../Jelly/Line.cs
    startLine: 151
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public readonly bool Intersects(Line line)
    parameters:
    - id: line
      type: Jelly.Line
    return:
      type: System.Boolean
    content.vb: Public Function Intersects(line As Line) As Boolean
  overload: Jelly.Line.Intersects*
- uid: Jelly.Line.Shift(Microsoft.Xna.Framework.Point)
  commentId: M:Jelly.Line.Shift(Microsoft.Xna.Framework.Point)
  id: Shift(Microsoft.Xna.Framework.Point)
  parent: Jelly.Line
  langs:
  - csharp
  - vb
  name: Shift(Point)
  nameWithType: Line.Shift(Point)
  fullName: Jelly.Line.Shift(Microsoft.Xna.Framework.Point)
  type: Method
  source:
    remote:
      path: Jelly/Line.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: Shift
    path: ../Jelly/Line.cs
    startLine: 179
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public readonly Line Shift(Point offset)
    parameters:
    - id: offset
      type: Microsoft.Xna.Framework.Point
    return:
      type: Jelly.Line
    content.vb: Public Function Shift(offset As Point) As Line
  overload: Jelly.Line.Shift*
- uid: Jelly.Line.Shift(System.Int32,System.Int32)
  commentId: M:Jelly.Line.Shift(System.Int32,System.Int32)
  id: Shift(System.Int32,System.Int32)
  parent: Jelly.Line
  langs:
  - csharp
  - vb
  name: Shift(int, int)
  nameWithType: Line.Shift(int, int)
  fullName: Jelly.Line.Shift(int, int)
  type: Method
  source:
    remote:
      path: Jelly/Line.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: Shift
    path: ../Jelly/Line.cs
    startLine: 184
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public readonly Line Shift(int x, int y)
    parameters:
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    return:
      type: Jelly.Line
    content.vb: Public Function Shift(x As Integer, y As Integer) As Line
  overload: Jelly.Line.Shift*
  nameWithType.vb: Line.Shift(Integer, Integer)
  fullName.vb: Jelly.Line.Shift(Integer, Integer)
  name.vb: Shift(Integer, Integer)
- uid: Jelly.Line.op_Equality(Jelly.Line,Jelly.Line)
  commentId: M:Jelly.Line.op_Equality(Jelly.Line,Jelly.Line)
  id: op_Equality(Jelly.Line,Jelly.Line)
  parent: Jelly.Line
  langs:
  - csharp
  - vb
  name: operator ==(Line, Line)
  nameWithType: Line.operator ==(Line, Line)
  fullName: Jelly.Line.operator ==(Jelly.Line, Jelly.Line)
  type: Operator
  source:
    remote:
      path: Jelly/Line.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: op_Equality
    path: ../Jelly/Line.cs
    startLine: 186
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public static bool operator ==(Line a, Line b)
    parameters:
    - id: a
      type: Jelly.Line
    - id: b
      type: Jelly.Line
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(a As Line, b As Line) As Boolean
  overload: Jelly.Line.op_Equality*
  nameWithType.vb: Line.=(Line, Line)
  fullName.vb: Jelly.Line.=(Jelly.Line, Jelly.Line)
  name.vb: =(Line, Line)
- uid: Jelly.Line.op_Inequality(Jelly.Line,Jelly.Line)
  commentId: M:Jelly.Line.op_Inequality(Jelly.Line,Jelly.Line)
  id: op_Inequality(Jelly.Line,Jelly.Line)
  parent: Jelly.Line
  langs:
  - csharp
  - vb
  name: operator !=(Line, Line)
  nameWithType: Line.operator !=(Line, Line)
  fullName: Jelly.Line.operator !=(Jelly.Line, Jelly.Line)
  type: Operator
  source:
    remote:
      path: Jelly/Line.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: op_Inequality
    path: ../Jelly/Line.cs
    startLine: 191
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public static bool operator !=(Line a, Line b)
    parameters:
    - id: a
      type: Jelly.Line
    - id: b
      type: Jelly.Line
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(a As Line, b As Line) As Boolean
  overload: Jelly.Line.op_Inequality*
  nameWithType.vb: Line.<>(Line, Line)
  fullName.vb: Jelly.Line.<>(Jelly.Line, Jelly.Line)
  name.vb: <>(Line, Line)
- uid: Jelly.Line.Equals(Jelly.Line)
  commentId: M:Jelly.Line.Equals(Jelly.Line)
  id: Equals(Jelly.Line)
  parent: Jelly.Line
  langs:
  - csharp
  - vb
  name: Equals(Line)
  nameWithType: Line.Equals(Line)
  fullName: Jelly.Line.Equals(Jelly.Line)
  type: Method
  source:
    remote:
      path: Jelly/Line.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: Equals
    path: ../Jelly/Line.cs
    startLine: 196
  assemblies:
  - Jelly
  namespace: Jelly
  summary: Indicates whether the current object is equal to another object of the same type.
  example: []
  syntax:
    content: public readonly bool Equals(Line other)
    parameters:
    - id: other
      type: Jelly.Line
      description: An object to compare with this object.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the current object is equal to the <code class="paramref">other</code> parameter; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function Equals(other As Line) As Boolean
  overload: Jelly.Line.Equals*
  implements:
  - System.IEquatable{Jelly.Line}.Equals(Jelly.Line)
- uid: Jelly.Line.Equals(System.Object)
  commentId: M:Jelly.Line.Equals(System.Object)
  id: Equals(System.Object)
  parent: Jelly.Line
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: Line.Equals(object)
  fullName: Jelly.Line.Equals(object)
  type: Method
  source:
    remote:
      path: Jelly/Line.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: Equals
    path: ../Jelly/Line.cs
    startLine: 201
  assemblies:
  - Jelly
  namespace: Jelly
  summary: Indicates whether this instance and a specified object are equal.
  example: []
  syntax:
    content: public override readonly bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current instance.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if <code class="paramref">obj</code> and this instance are the same type and represent the same value; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: Jelly.Line.Equals*
  nameWithType.vb: Line.Equals(Object)
  fullName.vb: Jelly.Line.Equals(Object)
  name.vb: Equals(Object)
references:
- uid: Jelly
  commentId: N:Jelly
  href: Jelly.html
  name: Jelly
  nameWithType: Jelly
  fullName: Jelly
- uid: System.IEquatable{Jelly.Line}
  commentId: T:System.IEquatable{Jelly.Line}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<Line>
  nameWithType: IEquatable<Line>
  fullName: System.IEquatable<Jelly.Line>
  nameWithType.vb: IEquatable(Of Line)
  fullName.vb: System.IEquatable(Of Jelly.Line)
  name.vb: IEquatable(Of Line)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: Jelly.Line
    name: Line
    href: Jelly.Line.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Jelly.Line
    name: Line
    href: Jelly.Line.html
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Jelly.Line.P1*
  commentId: Overload:Jelly.Line.P1
  href: Jelly.Line.html#Jelly_Line_P1
  name: P1
  nameWithType: Line.P1
  fullName: Jelly.Line.P1
- uid: Microsoft.Xna.Framework.Point
  commentId: T:Microsoft.Xna.Framework.Point
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Point
  nameWithType: Point
  fullName: Microsoft.Xna.Framework.Point
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
- uid: Jelly.Line.P2*
  commentId: Overload:Jelly.Line.P2
  href: Jelly.Line.html#Jelly_Line_P2
  name: P2
  nameWithType: Line.P2
  fullName: Jelly.Line.P2
- uid: Jelly.Line.Thickness*
  commentId: Overload:Jelly.Line.Thickness
  href: Jelly.Line.html#Jelly_Line_Thickness
  name: Thickness
  nameWithType: Line.Thickness
  fullName: Jelly.Line.Thickness
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Jelly.Line.Empty*
  commentId: Overload:Jelly.Line.Empty
  href: Jelly.Line.html#Jelly_Line_Empty
  name: Empty
  nameWithType: Line.Empty
  fullName: Jelly.Line.Empty
- uid: Jelly.Line
  commentId: T:Jelly.Line
  parent: Jelly
  href: Jelly.Line.html
  name: Line
  nameWithType: Line
  fullName: Jelly.Line
- uid: Jelly.Line.Item*
  commentId: Overload:Jelly.Line.Item
  href: Jelly.Line.html#Jelly_Line_Item_System_Int32_
  name: this
  nameWithType: Line.this
  fullName: Jelly.Line.this
  nameWithType.vb: Line.this[]
  fullName.vb: Jelly.Line.this[]
  name.vb: this[]
- uid: Jelly.Line.#ctor*
  commentId: Overload:Jelly.Line.#ctor
  href: Jelly.Line.html#Jelly_Line__ctor_Microsoft_Xna_Framework_Point_Microsoft_Xna_Framework_Point_System_Int32_
  name: Line
  nameWithType: Line.Line
  fullName: Jelly.Line.Line
  nameWithType.vb: Line.New
  fullName.vb: Jelly.Line.New
  name.vb: New
- uid: Jelly.Line.Intersects*
  commentId: Overload:Jelly.Line.Intersects
  href: Jelly.Line.html#Jelly_Line_Intersects_Microsoft_Xna_Framework_Rectangle_
  name: Intersects
  nameWithType: Line.Intersects
  fullName: Jelly.Line.Intersects
- uid: Microsoft.Xna.Framework.Rectangle
  commentId: T:Microsoft.Xna.Framework.Rectangle
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Rectangle
  nameWithType: Rectangle
  fullName: Microsoft.Xna.Framework.Rectangle
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Jelly.Line.Contains*
  commentId: Overload:Jelly.Line.Contains
  href: Jelly.Line.html#Jelly_Line_Contains_Microsoft_Xna_Framework_Point_
  name: Contains
  nameWithType: Line.Contains
  fullName: Jelly.Line.Contains
- uid: Jelly.Line.Shift*
  commentId: Overload:Jelly.Line.Shift
  href: Jelly.Line.html#Jelly_Line_Shift_Microsoft_Xna_Framework_Point_
  name: Shift
  nameWithType: Line.Shift
  fullName: Jelly.Line.Shift
- uid: Jelly.Line.op_Equality*
  commentId: Overload:Jelly.Line.op_Equality
  href: Jelly.Line.html#Jelly_Line_op_Equality_Jelly_Line_Jelly_Line_
  name: operator ==
  nameWithType: Line.operator ==
  fullName: Jelly.Line.operator ==
  nameWithType.vb: Line.=
  fullName.vb: Jelly.Line.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Jelly.Line.op_Equality*
    name: ==
    href: Jelly.Line.html#Jelly_Line_op_Equality_Jelly_Line_Jelly_Line_
- uid: Jelly.Line.op_Inequality*
  commentId: Overload:Jelly.Line.op_Inequality
  href: Jelly.Line.html#Jelly_Line_op_Inequality_Jelly_Line_Jelly_Line_
  name: operator !=
  nameWithType: Line.operator !=
  fullName: Jelly.Line.operator !=
  nameWithType.vb: Line.<>
  fullName.vb: Jelly.Line.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Jelly.Line.op_Inequality*
    name: '!='
    href: Jelly.Line.html#Jelly_Line_op_Inequality_Jelly_Line_Jelly_Line_
- uid: Jelly.Line.Equals*
  commentId: Overload:Jelly.Line.Equals
  href: Jelly.Line.html#Jelly_Line_Equals_Jelly_Line_
  name: Equals
  nameWithType: Line.Equals
  fullName: Jelly.Line.Equals
- uid: System.IEquatable{Jelly.Line}.Equals(Jelly.Line)
  commentId: M:System.IEquatable{Jelly.Line}.Equals(Jelly.Line)
  parent: System.IEquatable{Jelly.Line}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(Line)
  nameWithType: IEquatable<Line>.Equals(Line)
  fullName: System.IEquatable<Jelly.Line>.Equals(Jelly.Line)
  nameWithType.vb: IEquatable(Of Line).Equals(Line)
  fullName.vb: System.IEquatable(Of Jelly.Line).Equals(Jelly.Line)
  spec.csharp:
  - uid: System.IEquatable{Jelly.Line}.Equals(Jelly.Line)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: Jelly.Line
    name: Line
    href: Jelly.Line.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{Jelly.Line}.Equals(Jelly.Line)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: Jelly.Line
    name: Line
    href: Jelly.Line.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
