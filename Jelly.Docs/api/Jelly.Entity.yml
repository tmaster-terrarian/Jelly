### YamlMime:ManagedReference
items:
- uid: Jelly.Entity
  commentId: T:Jelly.Entity
  id: Entity
  parent: Jelly
  children:
  - Jelly.Entity.#ctor
  - Jelly.Entity.#ctor(Microsoft.Xna.Framework.Point)
  - Jelly.Entity.AddComponent(Jelly.Component)
  - Jelly.Entity.Added(Jelly.Scene)
  - Jelly.Entity.Awake(Jelly.Scene)
  - Jelly.Entity.Components
  - Jelly.Entity.CopyTo(Jelly.Entity)
  - Jelly.Entity.Depth
  - Jelly.Entity.Draw
  - Jelly.Entity.DrawUI
  - Jelly.Entity.Enabled
  - Jelly.Entity.EntityID
  - Jelly.Entity.GetComponent``1
  - Jelly.Entity.Persistent
  - Jelly.Entity.Pivot
  - Jelly.Entity.Position
  - Jelly.Entity.PostDraw
  - Jelly.Entity.PreDraw
  - Jelly.Entity.RemoveComponent(Jelly.Component)
  - Jelly.Entity.Removed(Jelly.Scene)
  - Jelly.Entity.Scene
  - Jelly.Entity.SceneBegin(Jelly.Scene)
  - Jelly.Entity.SceneEnd(Jelly.Scene)
  - Jelly.Entity.SetDefaults
  - Jelly.Entity.Tag
  - Jelly.Entity.Update
  - Jelly.Entity.Visible
  - Jelly.Entity.X
  - Jelly.Entity.Y
  langs:
  - csharp
  - vb
  name: Entity
  nameWithType: Entity
  fullName: Jelly.Entity
  type: Class
  source:
    remote:
      path: Jelly/Entity.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: Entity
    path: ../Jelly/Entity.cs
    startLine: 10
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public class Entity
    content.vb: Public Class Entity
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Jelly.Entity.Components
  commentId: P:Jelly.Entity.Components
  id: Components
  parent: Jelly.Entity
  langs:
  - csharp
  - vb
  name: Components
  nameWithType: Entity.Components
  fullName: Jelly.Entity.Components
  type: Property
  source:
    remote:
      path: Jelly/Entity.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: Components
    path: ../Jelly/Entity.cs
    startLine: 14
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public ComponentList Components { get; }
    parameters: []
    return:
      type: Jelly.Utilities.ComponentList
    content.vb: Public Property Components As ComponentList
  overload: Jelly.Entity.Components*
- uid: Jelly.Entity.Persistent
  commentId: P:Jelly.Entity.Persistent
  id: Persistent
  parent: Jelly.Entity
  langs:
  - csharp
  - vb
  name: Persistent
  nameWithType: Entity.Persistent
  fullName: Jelly.Entity.Persistent
  type: Property
  source:
    remote:
      path: Jelly/Entity.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: Persistent
    path: ../Jelly/Entity.cs
    startLine: 16
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public bool Persistent { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Persistent As Boolean
  overload: Jelly.Entity.Persistent*
- uid: Jelly.Entity.Position
  commentId: P:Jelly.Entity.Position
  id: Position
  parent: Jelly.Entity
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: Entity.Position
  fullName: Jelly.Entity.Position
  type: Property
  source:
    remote:
      path: Jelly/Entity.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: Position
    path: ../Jelly/Entity.cs
    startLine: 18
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public Point Position { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Point
    content.vb: Public Property Position As Point
  overload: Jelly.Entity.Position*
- uid: Jelly.Entity.Pivot
  commentId: P:Jelly.Entity.Pivot
  id: Pivot
  parent: Jelly.Entity
  langs:
  - csharp
  - vb
  name: Pivot
  nameWithType: Entity.Pivot
  fullName: Jelly.Entity.Pivot
  type: Property
  source:
    remote:
      path: Jelly/Entity.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: Pivot
    path: ../Jelly/Entity.cs
    startLine: 20
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public Point Pivot { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Point
    content.vb: Public Property Pivot As Point
  overload: Jelly.Entity.Pivot*
- uid: Jelly.Entity.Tag
  commentId: P:Jelly.Entity.Tag
  id: Tag
  parent: Jelly.Entity
  langs:
  - csharp
  - vb
  name: Tag
  nameWithType: Entity.Tag
  fullName: Jelly.Entity.Tag
  type: Property
  source:
    remote:
      path: Jelly/Entity.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: Tag
    path: ../Jelly/Entity.cs
    startLine: 22
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public Tag Tag { get; set; }
    parameters: []
    return:
      type: Jelly.Tag
    content.vb: Public Property Tag As Tag
  overload: Jelly.Entity.Tag*
- uid: Jelly.Entity.Enabled
  commentId: P:Jelly.Entity.Enabled
  id: Enabled
  parent: Jelly.Entity
  langs:
  - csharp
  - vb
  name: Enabled
  nameWithType: Entity.Enabled
  fullName: Jelly.Entity.Enabled
  type: Property
  source:
    remote:
      path: Jelly/Entity.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: Enabled
    path: ../Jelly/Entity.cs
    startLine: 24
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public bool Enabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Enabled As Boolean
  overload: Jelly.Entity.Enabled*
- uid: Jelly.Entity.Visible
  commentId: P:Jelly.Entity.Visible
  id: Visible
  parent: Jelly.Entity
  langs:
  - csharp
  - vb
  name: Visible
  nameWithType: Entity.Visible
  fullName: Jelly.Entity.Visible
  type: Property
  source:
    remote:
      path: Jelly/Entity.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: Visible
    path: ../Jelly/Entity.cs
    startLine: 25
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public bool Visible { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Visible As Boolean
  overload: Jelly.Entity.Visible*
- uid: Jelly.Entity.Scene
  commentId: P:Jelly.Entity.Scene
  id: Scene
  parent: Jelly.Entity
  langs:
  - csharp
  - vb
  name: Scene
  nameWithType: Entity.Scene
  fullName: Jelly.Entity.Scene
  type: Property
  source:
    remote:
      path: Jelly/Entity.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: Scene
    path: ../Jelly/Entity.cs
    startLine: 29
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: >-
      [JsonIgnore]

      public Scene? Scene { get; }
    parameters: []
    return:
      type: Jelly.Scene
    content.vb: >-
      <JsonIgnore>

      Public Property Scene As Scene
  overload: Jelly.Entity.Scene*
  attributes:
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
- uid: Jelly.Entity.Depth
  commentId: P:Jelly.Entity.Depth
  id: Depth
  parent: Jelly.Entity
  langs:
  - csharp
  - vb
  name: Depth
  nameWithType: Entity.Depth
  fullName: Jelly.Entity.Depth
  type: Property
  source:
    remote:
      path: Jelly/Entity.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: Depth
    path: ../Jelly/Entity.cs
    startLine: 31
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public int Depth { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Depth As Integer
  overload: Jelly.Entity.Depth*
- uid: Jelly.Entity.X
  commentId: P:Jelly.Entity.X
  id: X
  parent: Jelly.Entity
  langs:
  - csharp
  - vb
  name: X
  nameWithType: Entity.X
  fullName: Jelly.Entity.X
  type: Property
  source:
    remote:
      path: Jelly/Entity.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: X
    path: ../Jelly/Entity.cs
    startLine: 45
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: >-
      [JsonIgnore]

      public int X { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonIgnore>

      Public Property X As Integer
  overload: Jelly.Entity.X*
  attributes:
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
- uid: Jelly.Entity.Y
  commentId: P:Jelly.Entity.Y
  id: Y
  parent: Jelly.Entity
  langs:
  - csharp
  - vb
  name: Y
  nameWithType: Entity.Y
  fullName: Jelly.Entity.Y
  type: Property
  source:
    remote:
      path: Jelly/Entity.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: Y
    path: ../Jelly/Entity.cs
    startLine: 52
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: >-
      [JsonIgnore]

      public int Y { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonIgnore>

      Public Property Y As Integer
  overload: Jelly.Entity.Y*
  attributes:
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
- uid: Jelly.Entity.EntityID
  commentId: P:Jelly.Entity.EntityID
  id: EntityID
  parent: Jelly.Entity
  langs:
  - csharp
  - vb
  name: EntityID
  nameWithType: Entity.EntityID
  fullName: Jelly.Entity.EntityID
  type: Property
  source:
    remote:
      path: Jelly/Entity.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: EntityID
    path: ../Jelly/Entity.cs
    startLine: 59
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public long EntityID { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property EntityID As Long
  overload: Jelly.Entity.EntityID*
- uid: Jelly.Entity.#ctor(Microsoft.Xna.Framework.Point)
  commentId: M:Jelly.Entity.#ctor(Microsoft.Xna.Framework.Point)
  id: '#ctor(Microsoft.Xna.Framework.Point)'
  parent: Jelly.Entity
  langs:
  - csharp
  - vb
  name: Entity(Point)
  nameWithType: Entity.Entity(Point)
  fullName: Jelly.Entity.Entity(Microsoft.Xna.Framework.Point)
  type: Constructor
  source:
    remote:
      path: Jelly/Entity.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: .ctor
    path: ../Jelly/Entity.cs
    startLine: 61
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public Entity(Point position)
    parameters:
    - id: position
      type: Microsoft.Xna.Framework.Point
    content.vb: Public Sub New(position As Point)
  overload: Jelly.Entity.#ctor*
  nameWithType.vb: Entity.New(Point)
  fullName.vb: Jelly.Entity.New(Microsoft.Xna.Framework.Point)
  name.vb: New(Point)
- uid: Jelly.Entity.#ctor
  commentId: M:Jelly.Entity.#ctor
  id: '#ctor'
  parent: Jelly.Entity
  langs:
  - csharp
  - vb
  name: Entity()
  nameWithType: Entity.Entity()
  fullName: Jelly.Entity.Entity()
  type: Constructor
  source:
    remote:
      path: Jelly/Entity.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: .ctor
    path: ../Jelly/Entity.cs
    startLine: 68
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public Entity()
    content.vb: Public Sub New()
  overload: Jelly.Entity.#ctor*
  nameWithType.vb: Entity.New()
  fullName.vb: Jelly.Entity.New()
  name.vb: New()
- uid: Jelly.Entity.SetDefaults
  commentId: M:Jelly.Entity.SetDefaults
  id: SetDefaults
  parent: Jelly.Entity
  langs:
  - csharp
  - vb
  name: SetDefaults()
  nameWithType: Entity.SetDefaults()
  fullName: Jelly.Entity.SetDefaults()
  type: Method
  source:
    remote:
      path: Jelly/Entity.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: SetDefaults
    path: ../Jelly/Entity.cs
    startLine: 70
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public virtual void SetDefaults()
    content.vb: Public Overridable Sub SetDefaults()
  overload: Jelly.Entity.SetDefaults*
- uid: Jelly.Entity.CopyTo(Jelly.Entity)
  commentId: M:Jelly.Entity.CopyTo(Jelly.Entity)
  id: CopyTo(Jelly.Entity)
  parent: Jelly.Entity
  langs:
  - csharp
  - vb
  name: CopyTo(Entity)
  nameWithType: Entity.CopyTo(Entity)
  fullName: Jelly.Entity.CopyTo(Jelly.Entity)
  type: Method
  source:
    remote:
      path: Jelly/Entity.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: CopyTo
    path: ../Jelly/Entity.cs
    startLine: 72
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public virtual void CopyTo(Entity other)
    parameters:
    - id: other
      type: Jelly.Entity
    content.vb: Public Overridable Sub CopyTo(other As Entity)
  overload: Jelly.Entity.CopyTo*
- uid: Jelly.Entity.Awake(Jelly.Scene)
  commentId: M:Jelly.Entity.Awake(Jelly.Scene)
  id: Awake(Jelly.Scene)
  parent: Jelly.Entity
  langs:
  - csharp
  - vb
  name: Awake(Scene)
  nameWithType: Entity.Awake(Scene)
  fullName: Jelly.Entity.Awake(Jelly.Scene)
  type: Method
  source:
    remote:
      path: Jelly/Entity.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: Awake
    path: ../Jelly/Entity.cs
    startLine: 82
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public virtual void Awake(Scene scene)
    parameters:
    - id: scene
      type: Jelly.Scene
    content.vb: Public Overridable Sub Awake(scene As Scene)
  overload: Jelly.Entity.Awake*
- uid: Jelly.Entity.Added(Jelly.Scene)
  commentId: M:Jelly.Entity.Added(Jelly.Scene)
  id: Added(Jelly.Scene)
  parent: Jelly.Entity
  langs:
  - csharp
  - vb
  name: Added(Scene)
  nameWithType: Entity.Added(Scene)
  fullName: Jelly.Entity.Added(Jelly.Scene)
  type: Method
  source:
    remote:
      path: Jelly/Entity.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: Added
    path: ../Jelly/Entity.cs
    startLine: 89
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public virtual void Added(Scene scene)
    parameters:
    - id: scene
      type: Jelly.Scene
    content.vb: Public Overridable Sub Added(scene As Scene)
  overload: Jelly.Entity.Added*
- uid: Jelly.Entity.Removed(Jelly.Scene)
  commentId: M:Jelly.Entity.Removed(Jelly.Scene)
  id: Removed(Jelly.Scene)
  parent: Jelly.Entity
  langs:
  - csharp
  - vb
  name: Removed(Scene)
  nameWithType: Entity.Removed(Scene)
  fullName: Jelly.Entity.Removed(Jelly.Scene)
  type: Method
  source:
    remote:
      path: Jelly/Entity.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: Removed
    path: ../Jelly/Entity.cs
    startLine: 97
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public virtual void Removed(Scene scene)
    parameters:
    - id: scene
      type: Jelly.Scene
    content.vb: Public Overridable Sub Removed(scene As Scene)
  overload: Jelly.Entity.Removed*
- uid: Jelly.Entity.SceneBegin(Jelly.Scene)
  commentId: M:Jelly.Entity.SceneBegin(Jelly.Scene)
  id: SceneBegin(Jelly.Scene)
  parent: Jelly.Entity
  langs:
  - csharp
  - vb
  name: SceneBegin(Scene)
  nameWithType: Entity.SceneBegin(Scene)
  fullName: Jelly.Entity.SceneBegin(Jelly.Scene)
  type: Method
  source:
    remote:
      path: Jelly/Entity.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: SceneBegin
    path: ../Jelly/Entity.cs
    startLine: 105
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public virtual void SceneBegin(Scene scene)
    parameters:
    - id: scene
      type: Jelly.Scene
    content.vb: Public Overridable Sub SceneBegin(scene As Scene)
  overload: Jelly.Entity.SceneBegin*
- uid: Jelly.Entity.SceneEnd(Jelly.Scene)
  commentId: M:Jelly.Entity.SceneEnd(Jelly.Scene)
  id: SceneEnd(Jelly.Scene)
  parent: Jelly.Entity
  langs:
  - csharp
  - vb
  name: SceneEnd(Scene)
  nameWithType: Entity.SceneEnd(Scene)
  fullName: Jelly.Entity.SceneEnd(Jelly.Scene)
  type: Method
  source:
    remote:
      path: Jelly/Entity.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: SceneEnd
    path: ../Jelly/Entity.cs
    startLine: 107
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public virtual void SceneEnd(Scene scene)
    parameters:
    - id: scene
      type: Jelly.Scene
    content.vb: Public Overridable Sub SceneEnd(scene As Scene)
  overload: Jelly.Entity.SceneEnd*
- uid: Jelly.Entity.Update
  commentId: M:Jelly.Entity.Update
  id: Update
  parent: Jelly.Entity
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: Entity.Update()
  fullName: Jelly.Entity.Update()
  type: Method
  source:
    remote:
      path: Jelly/Entity.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: Update
    path: ../Jelly/Entity.cs
    startLine: 114
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public virtual void Update()
    content.vb: Public Overridable Sub Update()
  overload: Jelly.Entity.Update*
- uid: Jelly.Entity.PreDraw
  commentId: M:Jelly.Entity.PreDraw
  id: PreDraw
  parent: Jelly.Entity
  langs:
  - csharp
  - vb
  name: PreDraw()
  nameWithType: Entity.PreDraw()
  fullName: Jelly.Entity.PreDraw()
  type: Method
  source:
    remote:
      path: Jelly/Entity.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: PreDraw
    path: ../Jelly/Entity.cs
    startLine: 119
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public virtual void PreDraw()
    content.vb: Public Overridable Sub PreDraw()
  overload: Jelly.Entity.PreDraw*
- uid: Jelly.Entity.Draw
  commentId: M:Jelly.Entity.Draw
  id: Draw
  parent: Jelly.Entity
  langs:
  - csharp
  - vb
  name: Draw()
  nameWithType: Entity.Draw()
  fullName: Jelly.Entity.Draw()
  type: Method
  source:
    remote:
      path: Jelly/Entity.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: Draw
    path: ../Jelly/Entity.cs
    startLine: 124
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public virtual void Draw()
    content.vb: Public Overridable Sub Draw()
  overload: Jelly.Entity.Draw*
- uid: Jelly.Entity.DrawUI
  commentId: M:Jelly.Entity.DrawUI
  id: DrawUI
  parent: Jelly.Entity
  langs:
  - csharp
  - vb
  name: DrawUI()
  nameWithType: Entity.DrawUI()
  fullName: Jelly.Entity.DrawUI()
  type: Method
  source:
    remote:
      path: Jelly/Entity.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: DrawUI
    path: ../Jelly/Entity.cs
    startLine: 129
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public virtual void DrawUI()
    content.vb: Public Overridable Sub DrawUI()
  overload: Jelly.Entity.DrawUI*
- uid: Jelly.Entity.PostDraw
  commentId: M:Jelly.Entity.PostDraw
  id: PostDraw
  parent: Jelly.Entity
  langs:
  - csharp
  - vb
  name: PostDraw()
  nameWithType: Entity.PostDraw()
  fullName: Jelly.Entity.PostDraw()
  type: Method
  source:
    remote:
      path: Jelly/Entity.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: PostDraw
    path: ../Jelly/Entity.cs
    startLine: 134
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public virtual void PostDraw()
    content.vb: Public Overridable Sub PostDraw()
  overload: Jelly.Entity.PostDraw*
- uid: Jelly.Entity.RemoveComponent(Jelly.Component)
  commentId: M:Jelly.Entity.RemoveComponent(Jelly.Component)
  id: RemoveComponent(Jelly.Component)
  parent: Jelly.Entity
  langs:
  - csharp
  - vb
  name: RemoveComponent(Component)
  nameWithType: Entity.RemoveComponent(Component)
  fullName: Jelly.Entity.RemoveComponent(Jelly.Component)
  type: Method
  source:
    remote:
      path: Jelly/Entity.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: RemoveComponent
    path: ../Jelly/Entity.cs
    startLine: 139
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public void RemoveComponent(Component component)
    parameters:
    - id: component
      type: Jelly.Component
    content.vb: Public Sub RemoveComponent(component As Component)
  overload: Jelly.Entity.RemoveComponent*
- uid: Jelly.Entity.AddComponent(Jelly.Component)
  commentId: M:Jelly.Entity.AddComponent(Jelly.Component)
  id: AddComponent(Jelly.Component)
  parent: Jelly.Entity
  langs:
  - csharp
  - vb
  name: AddComponent(Component)
  nameWithType: Entity.AddComponent(Component)
  fullName: Jelly.Entity.AddComponent(Jelly.Component)
  type: Method
  source:
    remote:
      path: Jelly/Entity.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: AddComponent
    path: ../Jelly/Entity.cs
    startLine: 144
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: public void AddComponent(Component component)
    parameters:
    - id: component
      type: Jelly.Component
    content.vb: Public Sub AddComponent(component As Component)
  overload: Jelly.Entity.AddComponent*
- uid: Jelly.Entity.GetComponent``1
  commentId: M:Jelly.Entity.GetComponent``1
  id: GetComponent``1
  parent: Jelly.Entity
  langs:
  - csharp
  - vb
  name: GetComponent<T>()
  nameWithType: Entity.GetComponent<T>()
  fullName: Jelly.Entity.GetComponent<T>()
  type: Method
  source:
    remote:
      path: Jelly/Entity.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: GetComponent
    path: ../Jelly/Entity.cs
    startLine: 149
  assemblies:
  - Jelly
  namespace: Jelly
  syntax:
    content: 'public T GetComponent<T>() where T : Component'
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function GetComponent(Of T As Component)() As T
  overload: Jelly.Entity.GetComponent*
  nameWithType.vb: Entity.GetComponent(Of T)()
  fullName.vb: Jelly.Entity.GetComponent(Of T)()
  name.vb: GetComponent(Of T)()
references:
- uid: Jelly
  commentId: N:Jelly
  href: Jelly.html
  name: Jelly
  nameWithType: Jelly
  fullName: Jelly
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Jelly.Entity.Components*
  commentId: Overload:Jelly.Entity.Components
  href: Jelly.Entity.html#Jelly_Entity_Components
  name: Components
  nameWithType: Entity.Components
  fullName: Jelly.Entity.Components
- uid: Jelly.Utilities.ComponentList
  commentId: T:Jelly.Utilities.ComponentList
  parent: Jelly.Utilities
  href: Jelly.Utilities.ComponentList.html
  name: ComponentList
  nameWithType: ComponentList
  fullName: Jelly.Utilities.ComponentList
- uid: Jelly.Utilities
  commentId: N:Jelly.Utilities
  href: Jelly.html
  name: Jelly.Utilities
  nameWithType: Jelly.Utilities
  fullName: Jelly.Utilities
  spec.csharp:
  - uid: Jelly
    name: Jelly
    href: Jelly.html
  - name: .
  - uid: Jelly.Utilities
    name: Utilities
    href: Jelly.Utilities.html
  spec.vb:
  - uid: Jelly
    name: Jelly
    href: Jelly.html
  - name: .
  - uid: Jelly.Utilities
    name: Utilities
    href: Jelly.Utilities.html
- uid: Jelly.Entity.Persistent*
  commentId: Overload:Jelly.Entity.Persistent
  href: Jelly.Entity.html#Jelly_Entity_Persistent
  name: Persistent
  nameWithType: Entity.Persistent
  fullName: Jelly.Entity.Persistent
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Jelly.Entity.Position*
  commentId: Overload:Jelly.Entity.Position
  href: Jelly.Entity.html#Jelly_Entity_Position
  name: Position
  nameWithType: Entity.Position
  fullName: Jelly.Entity.Position
- uid: Microsoft.Xna.Framework.Point
  commentId: T:Microsoft.Xna.Framework.Point
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Point
  nameWithType: Point
  fullName: Microsoft.Xna.Framework.Point
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
- uid: Jelly.Entity.Pivot*
  commentId: Overload:Jelly.Entity.Pivot
  href: Jelly.Entity.html#Jelly_Entity_Pivot
  name: Pivot
  nameWithType: Entity.Pivot
  fullName: Jelly.Entity.Pivot
- uid: Jelly.Entity.Tag*
  commentId: Overload:Jelly.Entity.Tag
  href: Jelly.Entity.html#Jelly_Entity_Tag
  name: Tag
  nameWithType: Entity.Tag
  fullName: Jelly.Entity.Tag
- uid: Jelly.Tag
  commentId: T:Jelly.Tag
  parent: Jelly
  href: Jelly.Tag.html
  name: Tag
  nameWithType: Tag
  fullName: Jelly.Tag
- uid: Jelly.Entity.Enabled*
  commentId: Overload:Jelly.Entity.Enabled
  href: Jelly.Entity.html#Jelly_Entity_Enabled
  name: Enabled
  nameWithType: Entity.Enabled
  fullName: Jelly.Entity.Enabled
- uid: Jelly.Entity.Visible*
  commentId: Overload:Jelly.Entity.Visible
  href: Jelly.Entity.html#Jelly_Entity_Visible
  name: Visible
  nameWithType: Entity.Visible
  fullName: Jelly.Entity.Visible
- uid: Jelly.Entity.Scene*
  commentId: Overload:Jelly.Entity.Scene
  href: Jelly.Entity.html#Jelly_Entity_Scene
  name: Scene
  nameWithType: Entity.Scene
  fullName: Jelly.Entity.Scene
- uid: Jelly.Scene
  commentId: T:Jelly.Scene
  parent: Jelly
  href: Jelly.Scene.html
  name: Scene
  nameWithType: Scene
  fullName: Jelly.Scene
- uid: Jelly.Entity.Depth*
  commentId: Overload:Jelly.Entity.Depth
  href: Jelly.Entity.html#Jelly_Entity_Depth
  name: Depth
  nameWithType: Entity.Depth
  fullName: Jelly.Entity.Depth
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Jelly.Entity.X*
  commentId: Overload:Jelly.Entity.X
  href: Jelly.Entity.html#Jelly_Entity_X
  name: X
  nameWithType: Entity.X
  fullName: Jelly.Entity.X
- uid: Jelly.Entity.Y*
  commentId: Overload:Jelly.Entity.Y
  href: Jelly.Entity.html#Jelly_Entity_Y
  name: Y
  nameWithType: Entity.Y
  fullName: Jelly.Entity.Y
- uid: Jelly.Entity.EntityID*
  commentId: Overload:Jelly.Entity.EntityID
  href: Jelly.Entity.html#Jelly_Entity_EntityID
  name: EntityID
  nameWithType: Entity.EntityID
  fullName: Jelly.Entity.EntityID
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: Jelly.Entity.#ctor*
  commentId: Overload:Jelly.Entity.#ctor
  href: Jelly.Entity.html#Jelly_Entity__ctor_Microsoft_Xna_Framework_Point_
  name: Entity
  nameWithType: Entity.Entity
  fullName: Jelly.Entity.Entity
  nameWithType.vb: Entity.New
  fullName.vb: Jelly.Entity.New
  name.vb: New
- uid: Jelly.Entity.SetDefaults*
  commentId: Overload:Jelly.Entity.SetDefaults
  href: Jelly.Entity.html#Jelly_Entity_SetDefaults
  name: SetDefaults
  nameWithType: Entity.SetDefaults
  fullName: Jelly.Entity.SetDefaults
- uid: Jelly.Entity.CopyTo*
  commentId: Overload:Jelly.Entity.CopyTo
  href: Jelly.Entity.html#Jelly_Entity_CopyTo_Jelly_Entity_
  name: CopyTo
  nameWithType: Entity.CopyTo
  fullName: Jelly.Entity.CopyTo
- uid: Jelly.Entity
  commentId: T:Jelly.Entity
  parent: Jelly
  href: Jelly.Entity.html
  name: Entity
  nameWithType: Entity
  fullName: Jelly.Entity
- uid: Jelly.Entity.Awake*
  commentId: Overload:Jelly.Entity.Awake
  href: Jelly.Entity.html#Jelly_Entity_Awake_Jelly_Scene_
  name: Awake
  nameWithType: Entity.Awake
  fullName: Jelly.Entity.Awake
- uid: Jelly.Entity.Added*
  commentId: Overload:Jelly.Entity.Added
  href: Jelly.Entity.html#Jelly_Entity_Added_Jelly_Scene_
  name: Added
  nameWithType: Entity.Added
  fullName: Jelly.Entity.Added
- uid: Jelly.Entity.Removed*
  commentId: Overload:Jelly.Entity.Removed
  href: Jelly.Entity.html#Jelly_Entity_Removed_Jelly_Scene_
  name: Removed
  nameWithType: Entity.Removed
  fullName: Jelly.Entity.Removed
- uid: Jelly.Entity.SceneBegin*
  commentId: Overload:Jelly.Entity.SceneBegin
  href: Jelly.Entity.html#Jelly_Entity_SceneBegin_Jelly_Scene_
  name: SceneBegin
  nameWithType: Entity.SceneBegin
  fullName: Jelly.Entity.SceneBegin
- uid: Jelly.Entity.SceneEnd*
  commentId: Overload:Jelly.Entity.SceneEnd
  href: Jelly.Entity.html#Jelly_Entity_SceneEnd_Jelly_Scene_
  name: SceneEnd
  nameWithType: Entity.SceneEnd
  fullName: Jelly.Entity.SceneEnd
- uid: Jelly.Entity.Update*
  commentId: Overload:Jelly.Entity.Update
  href: Jelly.Entity.html#Jelly_Entity_Update
  name: Update
  nameWithType: Entity.Update
  fullName: Jelly.Entity.Update
- uid: Jelly.Entity.PreDraw*
  commentId: Overload:Jelly.Entity.PreDraw
  href: Jelly.Entity.html#Jelly_Entity_PreDraw
  name: PreDraw
  nameWithType: Entity.PreDraw
  fullName: Jelly.Entity.PreDraw
- uid: Jelly.Entity.Draw*
  commentId: Overload:Jelly.Entity.Draw
  href: Jelly.Entity.html#Jelly_Entity_Draw
  name: Draw
  nameWithType: Entity.Draw
  fullName: Jelly.Entity.Draw
- uid: Jelly.Entity.DrawUI*
  commentId: Overload:Jelly.Entity.DrawUI
  href: Jelly.Entity.html#Jelly_Entity_DrawUI
  name: DrawUI
  nameWithType: Entity.DrawUI
  fullName: Jelly.Entity.DrawUI
- uid: Jelly.Entity.PostDraw*
  commentId: Overload:Jelly.Entity.PostDraw
  href: Jelly.Entity.html#Jelly_Entity_PostDraw
  name: PostDraw
  nameWithType: Entity.PostDraw
  fullName: Jelly.Entity.PostDraw
- uid: Jelly.Entity.RemoveComponent*
  commentId: Overload:Jelly.Entity.RemoveComponent
  href: Jelly.Entity.html#Jelly_Entity_RemoveComponent_Jelly_Component_
  name: RemoveComponent
  nameWithType: Entity.RemoveComponent
  fullName: Jelly.Entity.RemoveComponent
- uid: Jelly.Component
  commentId: T:Jelly.Component
  parent: Jelly
  href: Jelly.Component.html
  name: Component
  nameWithType: Component
  fullName: Jelly.Component
- uid: Jelly.Entity.AddComponent*
  commentId: Overload:Jelly.Entity.AddComponent
  href: Jelly.Entity.html#Jelly_Entity_AddComponent_Jelly_Component_
  name: AddComponent
  nameWithType: Entity.AddComponent
  fullName: Jelly.Entity.AddComponent
- uid: Jelly.Entity.GetComponent*
  commentId: Overload:Jelly.Entity.GetComponent
  href: Jelly.Entity.html#Jelly_Entity_GetComponent__1
  name: GetComponent
  nameWithType: Entity.GetComponent
  fullName: Jelly.Entity.GetComponent
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
