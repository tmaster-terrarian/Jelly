### YamlMime:ManagedReference
items:
- uid: Jelly.GameContent.Registries
  commentId: T:Jelly.GameContent.Registries
  id: Registries
  parent: Jelly.GameContent
  children:
  - Jelly.GameContent.Registries.Add``1(Jelly.GameContent.Registry{``0})
  - Jelly.GameContent.Registries.Add``1(Jelly.GameContent.Registry{``0},System.Int32@)
  - Jelly.GameContent.Registries.GetAt``1(System.Int32)
  - Jelly.GameContent.Registries.Get``1
  - Jelly.GameContent.Registries.IsRegistered``1(Jelly.GameContent.Registry{``0})
  - Jelly.GameContent.Registries.Remove``1(Jelly.GameContent.Registry{``0})
  - Jelly.GameContent.Registries.Remove``1(Jelly.GameContent.Registry{``0},System.Int32@)
  langs:
  - csharp
  - vb
  name: Registries
  nameWithType: Registries
  fullName: Jelly.GameContent.Registries
  type: Class
  source:
    remote:
      path: Jelly/GameContent/Registries.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: Registries
    path: ../Jelly/GameContent/Registries.cs
    startLine: 7
  assemblies:
  - Jelly
  namespace: Jelly.GameContent
  syntax:
    content: public static class Registries
    content.vb: Public Module Registries
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Jelly.GameContent.Registries.Add``1(Jelly.GameContent.Registry{``0})
  commentId: M:Jelly.GameContent.Registries.Add``1(Jelly.GameContent.Registry{``0})
  id: Add``1(Jelly.GameContent.Registry{``0})
  parent: Jelly.GameContent.Registries
  langs:
  - csharp
  - vb
  name: Add<T>(Registry<T>)
  nameWithType: Registries.Add<T>(Registry<T>)
  fullName: Jelly.GameContent.Registries.Add<T>(Jelly.GameContent.Registry<T>)
  type: Method
  source:
    remote:
      path: Jelly/GameContent/Registries.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: Add
    path: ../Jelly/GameContent/Registries.cs
    startLine: 46
  assemblies:
  - Jelly
  namespace: Jelly.GameContent
  syntax:
    content: 'public static bool Add<T>(Registry<T> registry) where T : RegistryEntry'
    parameters:
    - id: registry
      type: Jelly.GameContent.Registry{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Boolean
    content.vb: Public Shared Function Add(Of T As RegistryEntry)(registry As Registry(Of T)) As Boolean
  overload: Jelly.GameContent.Registries.Add*
  nameWithType.vb: Registries.Add(Of T)(Registry(Of T))
  fullName.vb: Jelly.GameContent.Registries.Add(Of T)(Jelly.GameContent.Registry(Of T))
  name.vb: Add(Of T)(Registry(Of T))
- uid: Jelly.GameContent.Registries.Add``1(Jelly.GameContent.Registry{``0},System.Int32@)
  commentId: M:Jelly.GameContent.Registries.Add``1(Jelly.GameContent.Registry{``0},System.Int32@)
  id: Add``1(Jelly.GameContent.Registry{``0},System.Int32@)
  parent: Jelly.GameContent.Registries
  langs:
  - csharp
  - vb
  name: Add<T>(Registry<T>, out int)
  nameWithType: Registries.Add<T>(Registry<T>, out int)
  fullName: Jelly.GameContent.Registries.Add<T>(Jelly.GameContent.Registry<T>, out int)
  type: Method
  source:
    remote:
      path: Jelly/GameContent/Registries.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: Add
    path: ../Jelly/GameContent/Registries.cs
    startLine: 51
  assemblies:
  - Jelly
  namespace: Jelly.GameContent
  syntax:
    content: 'public static bool Add<T>(Registry<T> registry, out int index) where T : RegistryEntry'
    parameters:
    - id: registry
      type: Jelly.GameContent.Registry{{T}}
    - id: index
      type: System.Int32
    typeParameters:
    - id: T
    return:
      type: System.Boolean
    content.vb: Public Shared Function Add(Of T As RegistryEntry)(registry As Registry(Of T), index As Integer) As Boolean
  overload: Jelly.GameContent.Registries.Add*
  nameWithType.vb: Registries.Add(Of T)(Registry(Of T), Integer)
  fullName.vb: Jelly.GameContent.Registries.Add(Of T)(Jelly.GameContent.Registry(Of T), Integer)
  name.vb: Add(Of T)(Registry(Of T), Integer)
- uid: Jelly.GameContent.Registries.Remove``1(Jelly.GameContent.Registry{``0})
  commentId: M:Jelly.GameContent.Registries.Remove``1(Jelly.GameContent.Registry{``0})
  id: Remove``1(Jelly.GameContent.Registry{``0})
  parent: Jelly.GameContent.Registries
  langs:
  - csharp
  - vb
  name: Remove<T>(Registry<T>)
  nameWithType: Registries.Remove<T>(Registry<T>)
  fullName: Jelly.GameContent.Registries.Remove<T>(Jelly.GameContent.Registry<T>)
  type: Method
  source:
    remote:
      path: Jelly/GameContent/Registries.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: Remove
    path: ../Jelly/GameContent/Registries.cs
    startLine: 63
  assemblies:
  - Jelly
  namespace: Jelly.GameContent
  syntax:
    content: 'public static bool Remove<T>(Registry<T> registry) where T : RegistryEntry'
    parameters:
    - id: registry
      type: Jelly.GameContent.Registry{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Boolean
    content.vb: Public Shared Function Remove(Of T As RegistryEntry)(registry As Registry(Of T)) As Boolean
  overload: Jelly.GameContent.Registries.Remove*
  nameWithType.vb: Registries.Remove(Of T)(Registry(Of T))
  fullName.vb: Jelly.GameContent.Registries.Remove(Of T)(Jelly.GameContent.Registry(Of T))
  name.vb: Remove(Of T)(Registry(Of T))
- uid: Jelly.GameContent.Registries.Remove``1(Jelly.GameContent.Registry{``0},System.Int32@)
  commentId: M:Jelly.GameContent.Registries.Remove``1(Jelly.GameContent.Registry{``0},System.Int32@)
  id: Remove``1(Jelly.GameContent.Registry{``0},System.Int32@)
  parent: Jelly.GameContent.Registries
  langs:
  - csharp
  - vb
  name: Remove<T>(Registry<T>, out int)
  nameWithType: Registries.Remove<T>(Registry<T>, out int)
  fullName: Jelly.GameContent.Registries.Remove<T>(Jelly.GameContent.Registry<T>, out int)
  type: Method
  source:
    remote:
      path: Jelly/GameContent/Registries.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: Remove
    path: ../Jelly/GameContent/Registries.cs
    startLine: 68
  assemblies:
  - Jelly
  namespace: Jelly.GameContent
  syntax:
    content: 'public static bool Remove<T>(Registry<T> registry, out int index) where T : RegistryEntry'
    parameters:
    - id: registry
      type: Jelly.GameContent.Registry{{T}}
    - id: index
      type: System.Int32
    typeParameters:
    - id: T
    return:
      type: System.Boolean
    content.vb: Public Shared Function Remove(Of T As RegistryEntry)(registry As Registry(Of T), index As Integer) As Boolean
  overload: Jelly.GameContent.Registries.Remove*
  nameWithType.vb: Registries.Remove(Of T)(Registry(Of T), Integer)
  fullName.vb: Jelly.GameContent.Registries.Remove(Of T)(Jelly.GameContent.Registry(Of T), Integer)
  name.vb: Remove(Of T)(Registry(Of T), Integer)
- uid: Jelly.GameContent.Registries.GetAt``1(System.Int32)
  commentId: M:Jelly.GameContent.Registries.GetAt``1(System.Int32)
  id: GetAt``1(System.Int32)
  parent: Jelly.GameContent.Registries
  langs:
  - csharp
  - vb
  name: GetAt<T>(int)
  nameWithType: Registries.GetAt<T>(int)
  fullName: Jelly.GameContent.Registries.GetAt<T>(int)
  type: Method
  source:
    remote:
      path: Jelly/GameContent/Registries.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: GetAt
    path: ../Jelly/GameContent/Registries.cs
    startLine: 78
  assemblies:
  - Jelly
  namespace: Jelly.GameContent
  syntax:
    content: 'public static Registry<T> GetAt<T>(int index) where T : RegistryEntry'
    parameters:
    - id: index
      type: System.Int32
    typeParameters:
    - id: T
    return:
      type: Jelly.GameContent.Registry{{T}}
    content.vb: Public Shared Function GetAt(Of T As RegistryEntry)(index As Integer) As Registry(Of T)
  overload: Jelly.GameContent.Registries.GetAt*
  nameWithType.vb: Registries.GetAt(Of T)(Integer)
  fullName.vb: Jelly.GameContent.Registries.GetAt(Of T)(Integer)
  name.vb: GetAt(Of T)(Integer)
- uid: Jelly.GameContent.Registries.Get``1
  commentId: M:Jelly.GameContent.Registries.Get``1
  id: Get``1
  parent: Jelly.GameContent.Registries
  langs:
  - csharp
  - vb
  name: Get<T>()
  nameWithType: Registries.Get<T>()
  fullName: Jelly.GameContent.Registries.Get<T>()
  type: Method
  source:
    remote:
      path: Jelly/GameContent/Registries.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: Get
    path: ../Jelly/GameContent/Registries.cs
    startLine: 84
  assemblies:
  - Jelly
  namespace: Jelly.GameContent
  syntax:
    content: 'public static T Get<T>() where T : AbstractRegistry'
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function [Get](Of T As AbstractRegistry)() As T
  overload: Jelly.GameContent.Registries.Get*
  nameWithType.vb: Registries.Get(Of T)()
  fullName.vb: Jelly.GameContent.Registries.Get(Of T)()
  name.vb: Get(Of T)()
- uid: Jelly.GameContent.Registries.IsRegistered``1(Jelly.GameContent.Registry{``0})
  commentId: M:Jelly.GameContent.Registries.IsRegistered``1(Jelly.GameContent.Registry{``0})
  id: IsRegistered``1(Jelly.GameContent.Registry{``0})
  parent: Jelly.GameContent.Registries
  langs:
  - csharp
  - vb
  name: IsRegistered<T>(Registry<T>)
  nameWithType: Registries.IsRegistered<T>(Registry<T>)
  fullName: Jelly.GameContent.Registries.IsRegistered<T>(Jelly.GameContent.Registry<T>)
  type: Method
  source:
    remote:
      path: Jelly/GameContent/Registries.cs
      branch: dev
      repo: https://github.com/tmaster-terrarian/Jelly.git
    id: IsRegistered
    path: ../Jelly/GameContent/Registries.cs
    startLine: 93
  assemblies:
  - Jelly
  namespace: Jelly.GameContent
  syntax:
    content: 'public static bool IsRegistered<T>(Registry<T> registry) where T : RegistryEntry'
    parameters:
    - id: registry
      type: Jelly.GameContent.Registry{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsRegistered(Of T As RegistryEntry)(registry As Registry(Of T)) As Boolean
  overload: Jelly.GameContent.Registries.IsRegistered*
  nameWithType.vb: Registries.IsRegistered(Of T)(Registry(Of T))
  fullName.vb: Jelly.GameContent.Registries.IsRegistered(Of T)(Jelly.GameContent.Registry(Of T))
  name.vb: IsRegistered(Of T)(Registry(Of T))
references:
- uid: Jelly.GameContent
  commentId: N:Jelly.GameContent
  href: Jelly.html
  name: Jelly.GameContent
  nameWithType: Jelly.GameContent
  fullName: Jelly.GameContent
  spec.csharp:
  - uid: Jelly
    name: Jelly
    href: Jelly.html
  - name: .
  - uid: Jelly.GameContent
    name: GameContent
    href: Jelly.GameContent.html
  spec.vb:
  - uid: Jelly
    name: Jelly
    href: Jelly.html
  - name: .
  - uid: Jelly.GameContent
    name: GameContent
    href: Jelly.GameContent.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Jelly.GameContent.Registries.Add*
  commentId: Overload:Jelly.GameContent.Registries.Add
  href: Jelly.GameContent.Registries.html#Jelly_GameContent_Registries_Add__1_Jelly_GameContent_Registry___0__
  name: Add
  nameWithType: Registries.Add
  fullName: Jelly.GameContent.Registries.Add
- uid: Jelly.GameContent.Registry{{T}}
  commentId: T:Jelly.GameContent.Registry{``0}
  parent: Jelly.GameContent
  definition: Jelly.GameContent.Registry`1
  href: Jelly.GameContent.Registry-1.html
  name: Registry<T>
  nameWithType: Registry<T>
  fullName: Jelly.GameContent.Registry<T>
  nameWithType.vb: Registry(Of T)
  fullName.vb: Jelly.GameContent.Registry(Of T)
  name.vb: Registry(Of T)
  spec.csharp:
  - uid: Jelly.GameContent.Registry`1
    name: Registry
    href: Jelly.GameContent.Registry-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Jelly.GameContent.Registry`1
    name: Registry
    href: Jelly.GameContent.Registry-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Jelly.GameContent.Registry`1
  commentId: T:Jelly.GameContent.Registry`1
  href: Jelly.GameContent.Registry-1.html
  name: Registry<TDef>
  nameWithType: Registry<TDef>
  fullName: Jelly.GameContent.Registry<TDef>
  nameWithType.vb: Registry(Of TDef)
  fullName.vb: Jelly.GameContent.Registry(Of TDef)
  name.vb: Registry(Of TDef)
  spec.csharp:
  - uid: Jelly.GameContent.Registry`1
    name: Registry
    href: Jelly.GameContent.Registry-1.html
  - name: <
  - name: TDef
  - name: '>'
  spec.vb:
  - uid: Jelly.GameContent.Registry`1
    name: Registry
    href: Jelly.GameContent.Registry-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TDef
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Jelly.GameContent.Registries.Remove*
  commentId: Overload:Jelly.GameContent.Registries.Remove
  href: Jelly.GameContent.Registries.html#Jelly_GameContent_Registries_Remove__1_Jelly_GameContent_Registry___0__
  name: Remove
  nameWithType: Registries.Remove
  fullName: Jelly.GameContent.Registries.Remove
- uid: Jelly.GameContent.Registries.GetAt*
  commentId: Overload:Jelly.GameContent.Registries.GetAt
  href: Jelly.GameContent.Registries.html#Jelly_GameContent_Registries_GetAt__1_System_Int32_
  name: GetAt
  nameWithType: Registries.GetAt
  fullName: Jelly.GameContent.Registries.GetAt
- uid: Jelly.GameContent.Registries.Get*
  commentId: Overload:Jelly.GameContent.Registries.Get
  href: Jelly.GameContent.Registries.html#Jelly_GameContent_Registries_Get__1
  name: Get
  nameWithType: Registries.Get
  fullName: Jelly.GameContent.Registries.Get
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Jelly.GameContent.Registries.IsRegistered*
  commentId: Overload:Jelly.GameContent.Registries.IsRegistered
  href: Jelly.GameContent.Registries.html#Jelly_GameContent_Registries_IsRegistered__1_Jelly_GameContent_Registry___0__
  name: IsRegistered
  nameWithType: Registries.IsRegistered
  fullName: Jelly.GameContent.Registries.IsRegistered
